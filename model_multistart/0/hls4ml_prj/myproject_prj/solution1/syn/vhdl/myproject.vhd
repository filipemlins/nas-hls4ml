-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input1_V_ce0 : OUT STD_LOGIC;
    input1_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input1_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    input1_V_we0 : OUT STD_LOGIC;
    input1_V_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    input1_V_ce1 : OUT STD_LOGIC;
    input1_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    input1_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    input1_V_we1 : OUT STD_LOGIC;
    layer19_out_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    layer19_out_V_ce0 : OUT STD_LOGIC;
    layer19_out_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    layer19_out_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
    layer19_out_V_we0 : OUT STD_LOGIC;
    layer19_out_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    layer19_out_V_ce1 : OUT STD_LOGIC;
    layer19_out_V_d1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    layer19_out_V_q1 : IN STD_LOGIC_VECTOR (13 downto 0);
    layer19_out_V_we1 : OUT STD_LOGIC;
    const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    const_size_in_1_ap_vld : OUT STD_LOGIC;
    const_size_out_1_ap_vld : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of myproject is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "myproject,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z007sclg225-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.350000,HLS_SYN_LAT=4210363,HLS_SYN_TPT=1742309,HLS_SYN_MEM=124,HLS_SYN_DSP=9,HLS_SYN_FF=4852,HLS_SYN_LUT=8349,HLS_VERSION=2018_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal layer3_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer3_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer5_out_V_i_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer5_out_V_t_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer6_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer6_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer7_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer7_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer9_out_V_i_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer9_out_V_t_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer10_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer10_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer11_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer11_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer13_out_V_i_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer13_out_V_t_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer14_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer14_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer16_out_V_i_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer16_out_V_t_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal layer17_out_V_i_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer17_out_V_t_q0 : STD_LOGIC_VECTOR (13 downto 0);
    signal Block_arrayctor_loop_U0_ap_start : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_done : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_continue : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_idle : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_ready : STD_LOGIC;
    signal Block_arrayctor_loop_U0_const_size_in_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_const_size_in_1_ap_vld : STD_LOGIC;
    signal Block_arrayctor_loop_U0_const_size_out_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_arrayctor_loop_U0_const_size_out_1_ap_vld : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_ap_start : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_ap_done : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_ap_continue : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_ap_idle : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_ap_ready : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv_2d_large_cl_1_U0_data_V_ce0 : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_res_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv_2d_large_cl_1_U0_res_V_ce0 : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_res_V_we0 : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer3_out_V : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_res_V_full_n : STD_LOGIC;
    signal relu_1_U0_ap_start : STD_LOGIC;
    signal relu_1_U0_ap_done : STD_LOGIC;
    signal relu_1_U0_ap_continue : STD_LOGIC;
    signal relu_1_U0_ap_idle : STD_LOGIC;
    signal relu_1_U0_ap_ready : STD_LOGIC;
    signal relu_1_U0_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal relu_1_U0_data_V_ce0 : STD_LOGIC;
    signal relu_1_U0_res_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal relu_1_U0_res_V_ce0 : STD_LOGIC;
    signal relu_1_U0_res_V_we0 : STD_LOGIC;
    signal relu_1_U0_res_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_channel_done_layer5_out_V : STD_LOGIC;
    signal relu_1_U0_res_V_full_n : STD_LOGIC;
    signal pooling2d_cl_U0_ap_start : STD_LOGIC;
    signal pooling2d_cl_U0_ap_done : STD_LOGIC;
    signal pooling2d_cl_U0_ap_continue : STD_LOGIC;
    signal pooling2d_cl_U0_ap_idle : STD_LOGIC;
    signal pooling2d_cl_U0_ap_ready : STD_LOGIC;
    signal pooling2d_cl_U0_data_V_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal pooling2d_cl_U0_data_V_ce0 : STD_LOGIC;
    signal pooling2d_cl_U0_res_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal pooling2d_cl_U0_res_V_ce0 : STD_LOGIC;
    signal pooling2d_cl_U0_res_V_we0 : STD_LOGIC;
    signal pooling2d_cl_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer6_out_V : STD_LOGIC;
    signal pooling2d_cl_U0_res_V_full_n : STD_LOGIC;
    signal conv_2d_large_cl_U0_ap_start : STD_LOGIC;
    signal conv_2d_large_cl_U0_ap_done : STD_LOGIC;
    signal conv_2d_large_cl_U0_ap_continue : STD_LOGIC;
    signal conv_2d_large_cl_U0_ap_idle : STD_LOGIC;
    signal conv_2d_large_cl_U0_ap_ready : STD_LOGIC;
    signal conv_2d_large_cl_U0_data_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv_2d_large_cl_U0_data_V_ce0 : STD_LOGIC;
    signal conv_2d_large_cl_U0_res_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv_2d_large_cl_U0_res_V_ce0 : STD_LOGIC;
    signal conv_2d_large_cl_U0_res_V_we0 : STD_LOGIC;
    signal conv_2d_large_cl_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer7_out_V : STD_LOGIC;
    signal conv_2d_large_cl_U0_res_V_full_n : STD_LOGIC;
    signal relu_U0_ap_start : STD_LOGIC;
    signal relu_U0_ap_done : STD_LOGIC;
    signal relu_U0_ap_continue : STD_LOGIC;
    signal relu_U0_ap_idle : STD_LOGIC;
    signal relu_U0_ap_ready : STD_LOGIC;
    signal relu_U0_data_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal relu_U0_data_V_ce0 : STD_LOGIC;
    signal relu_U0_res_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal relu_U0_res_V_ce0 : STD_LOGIC;
    signal relu_U0_res_V_we0 : STD_LOGIC;
    signal relu_U0_res_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_channel_done_layer9_out_V : STD_LOGIC;
    signal relu_U0_res_V_full_n : STD_LOGIC;
    signal pooling2d_cl_1_U0_ap_start : STD_LOGIC;
    signal pooling2d_cl_1_U0_ap_done : STD_LOGIC;
    signal pooling2d_cl_1_U0_ap_continue : STD_LOGIC;
    signal pooling2d_cl_1_U0_ap_idle : STD_LOGIC;
    signal pooling2d_cl_1_U0_ap_ready : STD_LOGIC;
    signal pooling2d_cl_1_U0_data_V_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal pooling2d_cl_1_U0_data_V_ce0 : STD_LOGIC;
    signal pooling2d_cl_1_U0_res_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal pooling2d_cl_1_U0_res_V_ce0 : STD_LOGIC;
    signal pooling2d_cl_1_U0_res_V_we0 : STD_LOGIC;
    signal pooling2d_cl_1_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer10_out_V : STD_LOGIC;
    signal pooling2d_cl_1_U0_res_V_full_n : STD_LOGIC;
    signal dense_large_2_U0_ap_start : STD_LOGIC;
    signal dense_large_2_U0_ap_done : STD_LOGIC;
    signal dense_large_2_U0_ap_continue : STD_LOGIC;
    signal dense_large_2_U0_ap_idle : STD_LOGIC;
    signal dense_large_2_U0_ap_ready : STD_LOGIC;
    signal dense_large_2_U0_data_V_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dense_large_2_U0_data_V_ce0 : STD_LOGIC;
    signal dense_large_2_U0_res_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_large_2_U0_res_V_ce0 : STD_LOGIC;
    signal dense_large_2_U0_res_V_we0 : STD_LOGIC;
    signal dense_large_2_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer11_out_V : STD_LOGIC;
    signal dense_large_2_U0_res_V_full_n : STD_LOGIC;
    signal relu_3_U0_ap_start : STD_LOGIC;
    signal relu_3_U0_ap_done : STD_LOGIC;
    signal relu_3_U0_ap_continue : STD_LOGIC;
    signal relu_3_U0_ap_idle : STD_LOGIC;
    signal relu_3_U0_ap_ready : STD_LOGIC;
    signal relu_3_U0_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal relu_3_U0_data_V_ce0 : STD_LOGIC;
    signal relu_3_U0_res_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal relu_3_U0_res_V_ce0 : STD_LOGIC;
    signal relu_3_U0_res_V_we0 : STD_LOGIC;
    signal relu_3_U0_res_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_channel_done_layer13_out_V : STD_LOGIC;
    signal relu_3_U0_res_V_full_n : STD_LOGIC;
    signal dense_large_1_U0_ap_start : STD_LOGIC;
    signal dense_large_1_U0_ap_done : STD_LOGIC;
    signal dense_large_1_U0_ap_continue : STD_LOGIC;
    signal dense_large_1_U0_ap_idle : STD_LOGIC;
    signal dense_large_1_U0_ap_ready : STD_LOGIC;
    signal dense_large_1_U0_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_large_1_U0_data_V_ce0 : STD_LOGIC;
    signal dense_large_1_U0_res_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_large_1_U0_res_V_ce0 : STD_LOGIC;
    signal dense_large_1_U0_res_V_we0 : STD_LOGIC;
    signal dense_large_1_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer14_out_V : STD_LOGIC;
    signal dense_large_1_U0_res_V_full_n : STD_LOGIC;
    signal relu_2_U0_ap_start : STD_LOGIC;
    signal relu_2_U0_ap_done : STD_LOGIC;
    signal relu_2_U0_ap_continue : STD_LOGIC;
    signal relu_2_U0_ap_idle : STD_LOGIC;
    signal relu_2_U0_ap_ready : STD_LOGIC;
    signal relu_2_U0_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal relu_2_U0_data_V_ce0 : STD_LOGIC;
    signal relu_2_U0_res_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal relu_2_U0_res_V_ce0 : STD_LOGIC;
    signal relu_2_U0_res_V_we0 : STD_LOGIC;
    signal relu_2_U0_res_V_d0 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_channel_done_layer16_out_V : STD_LOGIC;
    signal relu_2_U0_res_V_full_n : STD_LOGIC;
    signal dense_large_U0_ap_start : STD_LOGIC;
    signal dense_large_U0_ap_done : STD_LOGIC;
    signal dense_large_U0_ap_continue : STD_LOGIC;
    signal dense_large_U0_ap_idle : STD_LOGIC;
    signal dense_large_U0_ap_ready : STD_LOGIC;
    signal dense_large_U0_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_large_U0_data_V_ce0 : STD_LOGIC;
    signal dense_large_U0_res_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_large_U0_res_V_ce0 : STD_LOGIC;
    signal dense_large_U0_res_V_we0 : STD_LOGIC;
    signal dense_large_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_channel_done_layer17_out_V : STD_LOGIC;
    signal dense_large_U0_res_V_full_n : STD_LOGIC;
    signal softmax_U0_ap_start : STD_LOGIC;
    signal softmax_U0_ap_done : STD_LOGIC;
    signal softmax_U0_ap_continue : STD_LOGIC;
    signal softmax_U0_ap_idle : STD_LOGIC;
    signal softmax_U0_ap_ready : STD_LOGIC;
    signal softmax_U0_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal softmax_U0_data_V_ce0 : STD_LOGIC;
    signal softmax_U0_res_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal softmax_U0_res_V_ce0 : STD_LOGIC;
    signal softmax_U0_res_V_we0 : STD_LOGIC;
    signal softmax_U0_res_V_d0 : STD_LOGIC_VECTOR (13 downto 0);
    signal layer3_out_V_i_full_n : STD_LOGIC;
    signal layer3_out_V_t_empty_n : STD_LOGIC;
    signal layer5_out_V_i_full_n : STD_LOGIC;
    signal layer5_out_V_t_empty_n : STD_LOGIC;
    signal layer6_out_V_i_full_n : STD_LOGIC;
    signal layer6_out_V_t_empty_n : STD_LOGIC;
    signal layer7_out_V_i_full_n : STD_LOGIC;
    signal layer7_out_V_t_empty_n : STD_LOGIC;
    signal layer9_out_V_i_full_n : STD_LOGIC;
    signal layer9_out_V_t_empty_n : STD_LOGIC;
    signal layer10_out_V_i_full_n : STD_LOGIC;
    signal layer10_out_V_t_empty_n : STD_LOGIC;
    signal layer11_out_V_i_full_n : STD_LOGIC;
    signal layer11_out_V_t_empty_n : STD_LOGIC;
    signal layer13_out_V_i_full_n : STD_LOGIC;
    signal layer13_out_V_t_empty_n : STD_LOGIC;
    signal layer14_out_V_i_full_n : STD_LOGIC;
    signal layer14_out_V_t_empty_n : STD_LOGIC;
    signal layer16_out_V_i_full_n : STD_LOGIC;
    signal layer16_out_V_t_empty_n : STD_LOGIC;
    signal layer17_out_V_i_full_n : STD_LOGIC;
    signal layer17_out_V_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_Block_arrayctor_loop_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_arrayctor_loop_U0_ap_ready : STD_LOGIC;
    signal Block_arrayctor_loop_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_conv_2d_large_cl_1_U0_ap_ready : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Block_arrayctor_loop_U0_start_full_n : STD_LOGIC;
    signal Block_arrayctor_loop_U0_start_write : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_start_full_n : STD_LOGIC;
    signal conv_2d_large_cl_1_U0_start_write : STD_LOGIC;
    signal relu_1_U0_start_full_n : STD_LOGIC;
    signal relu_1_U0_start_write : STD_LOGIC;
    signal pooling2d_cl_U0_start_full_n : STD_LOGIC;
    signal pooling2d_cl_U0_start_write : STD_LOGIC;
    signal conv_2d_large_cl_U0_start_full_n : STD_LOGIC;
    signal conv_2d_large_cl_U0_start_write : STD_LOGIC;
    signal relu_U0_start_full_n : STD_LOGIC;
    signal relu_U0_start_write : STD_LOGIC;
    signal pooling2d_cl_1_U0_start_full_n : STD_LOGIC;
    signal pooling2d_cl_1_U0_start_write : STD_LOGIC;
    signal dense_large_2_U0_start_full_n : STD_LOGIC;
    signal dense_large_2_U0_start_write : STD_LOGIC;
    signal relu_3_U0_start_full_n : STD_LOGIC;
    signal relu_3_U0_start_write : STD_LOGIC;
    signal dense_large_1_U0_start_full_n : STD_LOGIC;
    signal dense_large_1_U0_start_write : STD_LOGIC;
    signal relu_2_U0_start_full_n : STD_LOGIC;
    signal relu_2_U0_start_write : STD_LOGIC;
    signal dense_large_U0_start_full_n : STD_LOGIC;
    signal dense_large_U0_start_write : STD_LOGIC;
    signal softmax_U0_start_full_n : STD_LOGIC;
    signal softmax_U0_start_write : STD_LOGIC;

    component Block_arrayctor_loop IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        const_size_in_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        const_size_in_1_ap_vld : OUT STD_LOGIC;
        const_size_out_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        const_size_out_1_ap_vld : OUT STD_LOGIC );
    end component;


    component conv_2d_large_cl_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component relu_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component pooling2d_cl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component conv_2d_large_cl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component relu IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component pooling2d_cl_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component dense_large_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component relu_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component dense_large_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component relu_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component dense_large IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (12 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component softmax IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        data_V_ce0 : OUT STD_LOGIC;
        data_V_q0 : IN STD_LOGIC_VECTOR (13 downto 0);
        res_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        res_V_ce0 : OUT STD_LOGIC;
        res_V_we0 : OUT STD_LOGIC;
        res_V_d0 : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component myproject_layer3_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer5_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer6_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer7_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer9_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer10_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer11_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer13_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer14_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer16_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (12 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component myproject_layer17_out_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (13 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    layer3_out_V_U : component myproject_layer3_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 6728,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => conv_2d_large_cl_1_U0_res_V_address0,
        i_ce0 => conv_2d_large_cl_1_U0_res_V_ce0,
        i_we0 => conv_2d_large_cl_1_U0_res_V_we0,
        i_d0 => conv_2d_large_cl_1_U0_res_V_d0,
        i_q0 => layer3_out_V_i_q0,
        t_address0 => relu_1_U0_data_V_address0,
        t_ce0 => relu_1_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer3_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer3_out_V_i_full_n,
        i_write => conv_2d_large_cl_1_U0_ap_done,
        t_empty_n => layer3_out_V_t_empty_n,
        t_read => relu_1_U0_ap_ready);

    layer5_out_V_U : component myproject_layer5_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 6728,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => relu_1_U0_res_V_address0,
        i_ce0 => relu_1_U0_res_V_ce0,
        i_we0 => relu_1_U0_res_V_we0,
        i_d0 => relu_1_U0_res_V_d0,
        i_q0 => layer5_out_V_i_q0,
        t_address0 => pooling2d_cl_U0_data_V_address0,
        t_ce0 => pooling2d_cl_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv13_0,
        t_q0 => layer5_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer5_out_V_i_full_n,
        i_write => relu_1_U0_ap_done,
        t_empty_n => layer5_out_V_t_empty_n,
        t_read => pooling2d_cl_U0_ap_ready);

    layer6_out_V_U : component myproject_layer6_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 1568,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => pooling2d_cl_U0_res_V_address0,
        i_ce0 => pooling2d_cl_U0_res_V_ce0,
        i_we0 => pooling2d_cl_U0_res_V_we0,
        i_d0 => pooling2d_cl_U0_res_V_d0,
        i_q0 => layer6_out_V_i_q0,
        t_address0 => conv_2d_large_cl_U0_data_V_address0,
        t_ce0 => conv_2d_large_cl_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer6_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer6_out_V_i_full_n,
        i_write => pooling2d_cl_U0_ap_done,
        t_empty_n => layer6_out_V_t_empty_n,
        t_read => conv_2d_large_cl_U0_ap_ready);

    layer7_out_V_U : component myproject_layer7_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 2704,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => conv_2d_large_cl_U0_res_V_address0,
        i_ce0 => conv_2d_large_cl_U0_res_V_ce0,
        i_we0 => conv_2d_large_cl_U0_res_V_we0,
        i_d0 => conv_2d_large_cl_U0_res_V_d0,
        i_q0 => layer7_out_V_i_q0,
        t_address0 => relu_U0_data_V_address0,
        t_ce0 => relu_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer7_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer7_out_V_i_full_n,
        i_write => conv_2d_large_cl_U0_ap_done,
        t_empty_n => layer7_out_V_t_empty_n,
        t_read => relu_U0_ap_ready);

    layer9_out_V_U : component myproject_layer9_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 2704,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => relu_U0_res_V_address0,
        i_ce0 => relu_U0_res_V_ce0,
        i_we0 => relu_U0_res_V_we0,
        i_d0 => relu_U0_res_V_d0,
        i_q0 => layer9_out_V_i_q0,
        t_address0 => pooling2d_cl_1_U0_data_V_address0,
        t_ce0 => pooling2d_cl_1_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv13_0,
        t_q0 => layer9_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer9_out_V_i_full_n,
        i_write => relu_U0_ap_done,
        t_empty_n => layer9_out_V_t_empty_n,
        t_read => pooling2d_cl_1_U0_ap_ready);

    layer10_out_V_U : component myproject_layer10_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 576,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => pooling2d_cl_1_U0_res_V_address0,
        i_ce0 => pooling2d_cl_1_U0_res_V_ce0,
        i_we0 => pooling2d_cl_1_U0_res_V_we0,
        i_d0 => pooling2d_cl_1_U0_res_V_d0,
        i_q0 => layer10_out_V_i_q0,
        t_address0 => dense_large_2_U0_data_V_address0,
        t_ce0 => dense_large_2_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer10_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer10_out_V_i_full_n,
        i_write => pooling2d_cl_1_U0_ap_done,
        t_empty_n => layer10_out_V_t_empty_n,
        t_read => dense_large_2_U0_ap_ready);

    layer11_out_V_U : component myproject_layer11_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dense_large_2_U0_res_V_address0,
        i_ce0 => dense_large_2_U0_res_V_ce0,
        i_we0 => dense_large_2_U0_res_V_we0,
        i_d0 => dense_large_2_U0_res_V_d0,
        i_q0 => layer11_out_V_i_q0,
        t_address0 => relu_3_U0_data_V_address0,
        t_ce0 => relu_3_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer11_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer11_out_V_i_full_n,
        i_write => dense_large_2_U0_ap_done,
        t_empty_n => layer11_out_V_t_empty_n,
        t_read => relu_3_U0_ap_ready);

    layer13_out_V_U : component myproject_layer13_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 120,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => relu_3_U0_res_V_address0,
        i_ce0 => relu_3_U0_res_V_ce0,
        i_we0 => relu_3_U0_res_V_we0,
        i_d0 => relu_3_U0_res_V_d0,
        i_q0 => layer13_out_V_i_q0,
        t_address0 => dense_large_1_U0_data_V_address0,
        t_ce0 => dense_large_1_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv13_0,
        t_q0 => layer13_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer13_out_V_i_full_n,
        i_write => relu_3_U0_ap_done,
        t_empty_n => layer13_out_V_t_empty_n,
        t_read => dense_large_1_U0_ap_ready);

    layer14_out_V_U : component myproject_layer14_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dense_large_1_U0_res_V_address0,
        i_ce0 => dense_large_1_U0_res_V_ce0,
        i_we0 => dense_large_1_U0_res_V_we0,
        i_d0 => dense_large_1_U0_res_V_d0,
        i_q0 => layer14_out_V_i_q0,
        t_address0 => relu_2_U0_data_V_address0,
        t_ce0 => relu_2_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer14_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer14_out_V_i_full_n,
        i_write => dense_large_1_U0_ap_done,
        t_empty_n => layer14_out_V_t_empty_n,
        t_read => relu_2_U0_ap_ready);

    layer16_out_V_U : component myproject_layer16_out_V
    generic map (
        DataWidth => 13,
        AddressRange => 84,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => relu_2_U0_res_V_address0,
        i_ce0 => relu_2_U0_res_V_ce0,
        i_we0 => relu_2_U0_res_V_we0,
        i_d0 => relu_2_U0_res_V_d0,
        i_q0 => layer16_out_V_i_q0,
        t_address0 => dense_large_U0_data_V_address0,
        t_ce0 => dense_large_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv13_0,
        t_q0 => layer16_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer16_out_V_i_full_n,
        i_write => relu_2_U0_ap_done,
        t_empty_n => layer16_out_V_t_empty_n,
        t_read => dense_large_U0_ap_ready);

    layer17_out_V_U : component myproject_layer17_out_V
    generic map (
        DataWidth => 14,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dense_large_U0_res_V_address0,
        i_ce0 => dense_large_U0_res_V_ce0,
        i_we0 => dense_large_U0_res_V_we0,
        i_d0 => dense_large_U0_res_V_d0,
        i_q0 => layer17_out_V_i_q0,
        t_address0 => softmax_U0_data_V_address0,
        t_ce0 => softmax_U0_data_V_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv14_0,
        t_q0 => layer17_out_V_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => layer17_out_V_i_full_n,
        i_write => dense_large_U0_ap_done,
        t_empty_n => layer17_out_V_t_empty_n,
        t_read => softmax_U0_ap_ready);

    Block_arrayctor_loop_U0 : component Block_arrayctor_loop
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_arrayctor_loop_U0_ap_start,
        ap_done => Block_arrayctor_loop_U0_ap_done,
        ap_continue => Block_arrayctor_loop_U0_ap_continue,
        ap_idle => Block_arrayctor_loop_U0_ap_idle,
        ap_ready => Block_arrayctor_loop_U0_ap_ready,
        const_size_in_1 => Block_arrayctor_loop_U0_const_size_in_1,
        const_size_in_1_ap_vld => Block_arrayctor_loop_U0_const_size_in_1_ap_vld,
        const_size_out_1 => Block_arrayctor_loop_U0_const_size_out_1,
        const_size_out_1_ap_vld => Block_arrayctor_loop_U0_const_size_out_1_ap_vld);

    conv_2d_large_cl_1_U0 : component conv_2d_large_cl_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => conv_2d_large_cl_1_U0_ap_start,
        ap_done => conv_2d_large_cl_1_U0_ap_done,
        ap_continue => conv_2d_large_cl_1_U0_ap_continue,
        ap_idle => conv_2d_large_cl_1_U0_ap_idle,
        ap_ready => conv_2d_large_cl_1_U0_ap_ready,
        data_V_address0 => conv_2d_large_cl_1_U0_data_V_address0,
        data_V_ce0 => conv_2d_large_cl_1_U0_data_V_ce0,
        data_V_q0 => input1_V_q0,
        res_V_address0 => conv_2d_large_cl_1_U0_res_V_address0,
        res_V_ce0 => conv_2d_large_cl_1_U0_res_V_ce0,
        res_V_we0 => conv_2d_large_cl_1_U0_res_V_we0,
        res_V_d0 => conv_2d_large_cl_1_U0_res_V_d0);

    relu_1_U0 : component relu_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => relu_1_U0_ap_start,
        ap_done => relu_1_U0_ap_done,
        ap_continue => relu_1_U0_ap_continue,
        ap_idle => relu_1_U0_ap_idle,
        ap_ready => relu_1_U0_ap_ready,
        data_V_address0 => relu_1_U0_data_V_address0,
        data_V_ce0 => relu_1_U0_data_V_ce0,
        data_V_q0 => layer3_out_V_t_q0,
        res_V_address0 => relu_1_U0_res_V_address0,
        res_V_ce0 => relu_1_U0_res_V_ce0,
        res_V_we0 => relu_1_U0_res_V_we0,
        res_V_d0 => relu_1_U0_res_V_d0);

    pooling2d_cl_U0 : component pooling2d_cl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pooling2d_cl_U0_ap_start,
        ap_done => pooling2d_cl_U0_ap_done,
        ap_continue => pooling2d_cl_U0_ap_continue,
        ap_idle => pooling2d_cl_U0_ap_idle,
        ap_ready => pooling2d_cl_U0_ap_ready,
        data_V_address0 => pooling2d_cl_U0_data_V_address0,
        data_V_ce0 => pooling2d_cl_U0_data_V_ce0,
        data_V_q0 => layer5_out_V_t_q0,
        res_V_address0 => pooling2d_cl_U0_res_V_address0,
        res_V_ce0 => pooling2d_cl_U0_res_V_ce0,
        res_V_we0 => pooling2d_cl_U0_res_V_we0,
        res_V_d0 => pooling2d_cl_U0_res_V_d0);

    conv_2d_large_cl_U0 : component conv_2d_large_cl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => conv_2d_large_cl_U0_ap_start,
        ap_done => conv_2d_large_cl_U0_ap_done,
        ap_continue => conv_2d_large_cl_U0_ap_continue,
        ap_idle => conv_2d_large_cl_U0_ap_idle,
        ap_ready => conv_2d_large_cl_U0_ap_ready,
        data_V_address0 => conv_2d_large_cl_U0_data_V_address0,
        data_V_ce0 => conv_2d_large_cl_U0_data_V_ce0,
        data_V_q0 => layer6_out_V_t_q0,
        res_V_address0 => conv_2d_large_cl_U0_res_V_address0,
        res_V_ce0 => conv_2d_large_cl_U0_res_V_ce0,
        res_V_we0 => conv_2d_large_cl_U0_res_V_we0,
        res_V_d0 => conv_2d_large_cl_U0_res_V_d0);

    relu_U0 : component relu
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => relu_U0_ap_start,
        ap_done => relu_U0_ap_done,
        ap_continue => relu_U0_ap_continue,
        ap_idle => relu_U0_ap_idle,
        ap_ready => relu_U0_ap_ready,
        data_V_address0 => relu_U0_data_V_address0,
        data_V_ce0 => relu_U0_data_V_ce0,
        data_V_q0 => layer7_out_V_t_q0,
        res_V_address0 => relu_U0_res_V_address0,
        res_V_ce0 => relu_U0_res_V_ce0,
        res_V_we0 => relu_U0_res_V_we0,
        res_V_d0 => relu_U0_res_V_d0);

    pooling2d_cl_1_U0 : component pooling2d_cl_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => pooling2d_cl_1_U0_ap_start,
        ap_done => pooling2d_cl_1_U0_ap_done,
        ap_continue => pooling2d_cl_1_U0_ap_continue,
        ap_idle => pooling2d_cl_1_U0_ap_idle,
        ap_ready => pooling2d_cl_1_U0_ap_ready,
        data_V_address0 => pooling2d_cl_1_U0_data_V_address0,
        data_V_ce0 => pooling2d_cl_1_U0_data_V_ce0,
        data_V_q0 => layer9_out_V_t_q0,
        res_V_address0 => pooling2d_cl_1_U0_res_V_address0,
        res_V_ce0 => pooling2d_cl_1_U0_res_V_ce0,
        res_V_we0 => pooling2d_cl_1_U0_res_V_we0,
        res_V_d0 => pooling2d_cl_1_U0_res_V_d0);

    dense_large_2_U0 : component dense_large_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_large_2_U0_ap_start,
        ap_done => dense_large_2_U0_ap_done,
        ap_continue => dense_large_2_U0_ap_continue,
        ap_idle => dense_large_2_U0_ap_idle,
        ap_ready => dense_large_2_U0_ap_ready,
        data_V_address0 => dense_large_2_U0_data_V_address0,
        data_V_ce0 => dense_large_2_U0_data_V_ce0,
        data_V_q0 => layer10_out_V_t_q0,
        res_V_address0 => dense_large_2_U0_res_V_address0,
        res_V_ce0 => dense_large_2_U0_res_V_ce0,
        res_V_we0 => dense_large_2_U0_res_V_we0,
        res_V_d0 => dense_large_2_U0_res_V_d0);

    relu_3_U0 : component relu_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => relu_3_U0_ap_start,
        ap_done => relu_3_U0_ap_done,
        ap_continue => relu_3_U0_ap_continue,
        ap_idle => relu_3_U0_ap_idle,
        ap_ready => relu_3_U0_ap_ready,
        data_V_address0 => relu_3_U0_data_V_address0,
        data_V_ce0 => relu_3_U0_data_V_ce0,
        data_V_q0 => layer11_out_V_t_q0,
        res_V_address0 => relu_3_U0_res_V_address0,
        res_V_ce0 => relu_3_U0_res_V_ce0,
        res_V_we0 => relu_3_U0_res_V_we0,
        res_V_d0 => relu_3_U0_res_V_d0);

    dense_large_1_U0 : component dense_large_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_large_1_U0_ap_start,
        ap_done => dense_large_1_U0_ap_done,
        ap_continue => dense_large_1_U0_ap_continue,
        ap_idle => dense_large_1_U0_ap_idle,
        ap_ready => dense_large_1_U0_ap_ready,
        data_V_address0 => dense_large_1_U0_data_V_address0,
        data_V_ce0 => dense_large_1_U0_data_V_ce0,
        data_V_q0 => layer13_out_V_t_q0,
        res_V_address0 => dense_large_1_U0_res_V_address0,
        res_V_ce0 => dense_large_1_U0_res_V_ce0,
        res_V_we0 => dense_large_1_U0_res_V_we0,
        res_V_d0 => dense_large_1_U0_res_V_d0);

    relu_2_U0 : component relu_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => relu_2_U0_ap_start,
        ap_done => relu_2_U0_ap_done,
        ap_continue => relu_2_U0_ap_continue,
        ap_idle => relu_2_U0_ap_idle,
        ap_ready => relu_2_U0_ap_ready,
        data_V_address0 => relu_2_U0_data_V_address0,
        data_V_ce0 => relu_2_U0_data_V_ce0,
        data_V_q0 => layer14_out_V_t_q0,
        res_V_address0 => relu_2_U0_res_V_address0,
        res_V_ce0 => relu_2_U0_res_V_ce0,
        res_V_we0 => relu_2_U0_res_V_we0,
        res_V_d0 => relu_2_U0_res_V_d0);

    dense_large_U0 : component dense_large
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dense_large_U0_ap_start,
        ap_done => dense_large_U0_ap_done,
        ap_continue => dense_large_U0_ap_continue,
        ap_idle => dense_large_U0_ap_idle,
        ap_ready => dense_large_U0_ap_ready,
        data_V_address0 => dense_large_U0_data_V_address0,
        data_V_ce0 => dense_large_U0_data_V_ce0,
        data_V_q0 => layer16_out_V_t_q0,
        res_V_address0 => dense_large_U0_res_V_address0,
        res_V_ce0 => dense_large_U0_res_V_ce0,
        res_V_we0 => dense_large_U0_res_V_we0,
        res_V_d0 => dense_large_U0_res_V_d0);

    softmax_U0 : component softmax
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => softmax_U0_ap_start,
        ap_done => softmax_U0_ap_done,
        ap_continue => softmax_U0_ap_continue,
        ap_idle => softmax_U0_ap_idle,
        ap_ready => softmax_U0_ap_ready,
        data_V_address0 => softmax_U0_data_V_address0,
        data_V_ce0 => softmax_U0_data_V_ce0,
        data_V_q0 => layer17_out_V_t_q0,
        res_V_address0 => softmax_U0_res_V_address0,
        res_V_ce0 => softmax_U0_res_V_ce0,
        res_V_we0 => softmax_U0_res_V_we0,
        res_V_d0 => softmax_U0_res_V_d0);





    ap_sync_reg_Block_arrayctor_loop_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_Block_arrayctor_loop_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_arrayctor_loop_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_arrayctor_loop_U0_ap_ready <= ap_sync_Block_arrayctor_loop_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready <= ap_sync_conv_2d_large_cl_1_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    Block_arrayctor_loop_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (ap_const_logic_0 = Block_arrayctor_loop_U0_ap_ready))) then 
                Block_arrayctor_loop_U0_ap_ready_count <= std_logic_vector(unsigned(Block_arrayctor_loop_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Block_arrayctor_loop_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Block_arrayctor_loop_U0_ap_ready_count <= std_logic_vector(unsigned(Block_arrayctor_loop_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    conv_2d_large_cl_1_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (conv_2d_large_cl_1_U0_ap_ready = ap_const_logic_0))) then 
                conv_2d_large_cl_1_U0_ap_ready_count <= std_logic_vector(unsigned(conv_2d_large_cl_1_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((conv_2d_large_cl_1_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                conv_2d_large_cl_1_U0_ap_ready_count <= std_logic_vector(unsigned(conv_2d_large_cl_1_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    Block_arrayctor_loop_U0_ap_continue <= ap_sync_done;
    Block_arrayctor_loop_U0_ap_start <= ((ap_sync_reg_Block_arrayctor_loop_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_arrayctor_loop_U0_start_full_n <= ap_const_logic_1;
    Block_arrayctor_loop_U0_start_write <= ap_const_logic_0;
    ap_channel_done_layer10_out_V <= pooling2d_cl_1_U0_ap_done;
    ap_channel_done_layer11_out_V <= dense_large_2_U0_ap_done;
    ap_channel_done_layer13_out_V <= relu_3_U0_ap_done;
    ap_channel_done_layer14_out_V <= dense_large_1_U0_ap_done;
    ap_channel_done_layer16_out_V <= relu_2_U0_ap_done;
    ap_channel_done_layer17_out_V <= dense_large_U0_ap_done;
    ap_channel_done_layer3_out_V <= conv_2d_large_cl_1_U0_ap_done;
    ap_channel_done_layer5_out_V <= relu_1_U0_ap_done;
    ap_channel_done_layer6_out_V <= pooling2d_cl_U0_ap_done;
    ap_channel_done_layer7_out_V <= conv_2d_large_cl_U0_ap_done;
    ap_channel_done_layer9_out_V <= relu_U0_ap_done;
    ap_done <= ap_sync_done;
    ap_idle <= (softmax_U0_ap_idle and relu_U0_ap_idle and relu_3_U0_ap_idle and relu_2_U0_ap_idle and relu_1_U0_ap_idle and pooling2d_cl_U0_ap_idle and pooling2d_cl_1_U0_ap_idle and (layer17_out_V_t_empty_n xor ap_const_logic_1) and (layer16_out_V_t_empty_n xor ap_const_logic_1) and (layer14_out_V_t_empty_n xor ap_const_logic_1) and (layer13_out_V_t_empty_n xor ap_const_logic_1) and (layer11_out_V_t_empty_n xor ap_const_logic_1) and (layer10_out_V_t_empty_n xor ap_const_logic_1) and (layer9_out_V_t_empty_n xor ap_const_logic_1) and (layer7_out_V_t_empty_n xor ap_const_logic_1) and (layer6_out_V_t_empty_n xor ap_const_logic_1) and (layer5_out_V_t_empty_n xor ap_const_logic_1) and (layer3_out_V_t_empty_n xor ap_const_logic_1) and dense_large_U0_ap_idle and dense_large_2_U0_ap_idle and dense_large_1_U0_ap_idle and conv_2d_large_cl_U0_ap_idle and conv_2d_large_cl_1_U0_ap_idle and Block_arrayctor_loop_U0_ap_idle);
    ap_ready <= ap_sync_ready;
    ap_sync_Block_arrayctor_loop_U0_ap_ready <= (ap_sync_reg_Block_arrayctor_loop_U0_ap_ready or Block_arrayctor_loop_U0_ap_ready);
    ap_sync_continue <= ap_sync_done;
    ap_sync_conv_2d_large_cl_1_U0_ap_ready <= (conv_2d_large_cl_1_U0_ap_ready or ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready);
    ap_sync_done <= (softmax_U0_ap_done and Block_arrayctor_loop_U0_ap_done);
    ap_sync_ready <= (ap_sync_conv_2d_large_cl_1_U0_ap_ready and ap_sync_Block_arrayctor_loop_U0_ap_ready);
    const_size_in_1 <= Block_arrayctor_loop_U0_const_size_in_1;
    const_size_in_1_ap_vld <= Block_arrayctor_loop_U0_const_size_in_1_ap_vld;
    const_size_out_1 <= Block_arrayctor_loop_U0_const_size_out_1;
    const_size_out_1_ap_vld <= Block_arrayctor_loop_U0_const_size_out_1_ap_vld;
    conv_2d_large_cl_1_U0_ap_continue <= layer3_out_V_i_full_n;
    conv_2d_large_cl_1_U0_ap_start <= ((ap_sync_reg_conv_2d_large_cl_1_U0_ap_ready xor ap_const_logic_1) and ap_start);
    conv_2d_large_cl_1_U0_res_V_full_n <= layer3_out_V_i_full_n;
    conv_2d_large_cl_1_U0_start_full_n <= ap_const_logic_1;
    conv_2d_large_cl_1_U0_start_write <= ap_const_logic_0;
    conv_2d_large_cl_U0_ap_continue <= layer7_out_V_i_full_n;
    conv_2d_large_cl_U0_ap_start <= layer6_out_V_t_empty_n;
    conv_2d_large_cl_U0_res_V_full_n <= layer7_out_V_i_full_n;
    conv_2d_large_cl_U0_start_full_n <= ap_const_logic_1;
    conv_2d_large_cl_U0_start_write <= ap_const_logic_0;
    dense_large_1_U0_ap_continue <= layer14_out_V_i_full_n;
    dense_large_1_U0_ap_start <= layer13_out_V_t_empty_n;
    dense_large_1_U0_res_V_full_n <= layer14_out_V_i_full_n;
    dense_large_1_U0_start_full_n <= ap_const_logic_1;
    dense_large_1_U0_start_write <= ap_const_logic_0;
    dense_large_2_U0_ap_continue <= layer11_out_V_i_full_n;
    dense_large_2_U0_ap_start <= layer10_out_V_t_empty_n;
    dense_large_2_U0_res_V_full_n <= layer11_out_V_i_full_n;
    dense_large_2_U0_start_full_n <= ap_const_logic_1;
    dense_large_2_U0_start_write <= ap_const_logic_0;
    dense_large_U0_ap_continue <= layer17_out_V_i_full_n;
    dense_large_U0_ap_start <= layer16_out_V_t_empty_n;
    dense_large_U0_res_V_full_n <= layer17_out_V_i_full_n;
    dense_large_U0_start_full_n <= ap_const_logic_1;
    dense_large_U0_start_write <= ap_const_logic_0;
    input1_V_address0 <= conv_2d_large_cl_1_U0_data_V_address0;
    input1_V_address1 <= ap_const_lv10_0;
    input1_V_ce0 <= conv_2d_large_cl_1_U0_data_V_ce0;
    input1_V_ce1 <= ap_const_logic_0;
    input1_V_d0 <= ap_const_lv14_0;
    input1_V_d1 <= ap_const_lv14_0;
    input1_V_we0 <= ap_const_logic_0;
    input1_V_we1 <= ap_const_logic_0;
    layer19_out_V_address0 <= softmax_U0_res_V_address0;
    layer19_out_V_address1 <= ap_const_lv4_0;
    layer19_out_V_ce0 <= softmax_U0_res_V_ce0;
    layer19_out_V_ce1 <= ap_const_logic_0;
    layer19_out_V_d0 <= softmax_U0_res_V_d0;
    layer19_out_V_d1 <= ap_const_lv14_0;
    layer19_out_V_we0 <= softmax_U0_res_V_we0;
    layer19_out_V_we1 <= ap_const_logic_0;
    pooling2d_cl_1_U0_ap_continue <= layer10_out_V_i_full_n;
    pooling2d_cl_1_U0_ap_start <= layer9_out_V_t_empty_n;
    pooling2d_cl_1_U0_res_V_full_n <= layer10_out_V_i_full_n;
    pooling2d_cl_1_U0_start_full_n <= ap_const_logic_1;
    pooling2d_cl_1_U0_start_write <= ap_const_logic_0;
    pooling2d_cl_U0_ap_continue <= layer6_out_V_i_full_n;
    pooling2d_cl_U0_ap_start <= layer5_out_V_t_empty_n;
    pooling2d_cl_U0_res_V_full_n <= layer6_out_V_i_full_n;
    pooling2d_cl_U0_start_full_n <= ap_const_logic_1;
    pooling2d_cl_U0_start_write <= ap_const_logic_0;
    relu_1_U0_ap_continue <= layer5_out_V_i_full_n;
    relu_1_U0_ap_start <= layer3_out_V_t_empty_n;
    relu_1_U0_res_V_full_n <= layer5_out_V_i_full_n;
    relu_1_U0_start_full_n <= ap_const_logic_1;
    relu_1_U0_start_write <= ap_const_logic_0;
    relu_2_U0_ap_continue <= layer16_out_V_i_full_n;
    relu_2_U0_ap_start <= layer14_out_V_t_empty_n;
    relu_2_U0_res_V_full_n <= layer16_out_V_i_full_n;
    relu_2_U0_start_full_n <= ap_const_logic_1;
    relu_2_U0_start_write <= ap_const_logic_0;
    relu_3_U0_ap_continue <= layer13_out_V_i_full_n;
    relu_3_U0_ap_start <= layer11_out_V_t_empty_n;
    relu_3_U0_res_V_full_n <= layer13_out_V_i_full_n;
    relu_3_U0_start_full_n <= ap_const_logic_1;
    relu_3_U0_start_write <= ap_const_logic_0;
    relu_U0_ap_continue <= layer9_out_V_i_full_n;
    relu_U0_ap_start <= layer7_out_V_t_empty_n;
    relu_U0_res_V_full_n <= layer9_out_V_i_full_n;
    relu_U0_start_full_n <= ap_const_logic_1;
    relu_U0_start_write <= ap_const_logic_0;
    softmax_U0_ap_continue <= ap_sync_done;
    softmax_U0_ap_start <= layer17_out_V_t_empty_n;
    softmax_U0_start_full_n <= ap_const_logic_1;
    softmax_U0_start_write <= ap_const_logic_0;
end behav;
