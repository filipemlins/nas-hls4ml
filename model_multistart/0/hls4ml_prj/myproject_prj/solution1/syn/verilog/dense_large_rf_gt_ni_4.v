// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_large_rf_gt_ni_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        res_V_address0,
        res_V_ce0,
        res_V_we0,
        res_V_d0
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] data_V_address0;
output   data_V_ce0;
input  [13:0] data_V_q0;
output  [6:0] res_V_address0;
output   res_V_ce0;
output   res_V_we0;
output  [13:0] res_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg res_V_ce0;
reg res_V_we0;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [13:0] outidx5_address0;
reg    outidx5_ce0;
wire   [4:0] outidx5_q0;
wire   [13:0] w11_V_address0;
reg    w11_V_ce0;
wire   [65:0] w11_V_q0;
wire   [13:0] acc_V_q0;
reg  signed [13:0] reg_265;
wire    ap_CS_fsm_state32;
wire    grp_product_fu_259_ap_ready;
wire    grp_product_fu_259_ap_done;
wire    ap_CS_fsm_state39;
wire   [6:0] iacc_1_fu_276_p2;
wire    ap_CS_fsm_state2;
wire   [16:0] w_index_cast_fu_287_p1;
reg   [16:0] w_index_cast_reg_522;
wire    ap_CS_fsm_state3;
wire   [13:0] ir_fu_297_p2;
reg   [13:0] ir_reg_530;
wire   [0:0] exitcond_fu_291_p2;
reg   [4:0] out_index_reg_540;
wire    ap_CS_fsm_state4;
wire   [7:0] out_index_cast_fu_313_p1;
wire    ap_CS_fsm_state5;
reg   [13:0] data_V_load_reg_555;
wire   [0:0] tmp_48_fu_316_p2;
reg   [0:0] tmp_48_reg_560;
wire    ap_CS_fsm_state6;
wire   [2:0] im_1_fu_322_p2;
reg   [2:0] im_1_reg_564;
wire    ap_CS_fsm_state25;
wire   [16:0] grp_fu_328_p2;
reg   [16:0] tmp_39_reg_574;
wire    ap_CS_fsm_state26;
wire   [35:0] grp_fu_508_p2;
reg   [35:0] mul_reg_579;
wire    ap_CS_fsm_state27;
reg   [65:0] w11_V_load_reg_589;
wire    ap_CS_fsm_state28;
wire   [6:0] tmp_43_fu_371_p2;
reg   [6:0] tmp_43_reg_594;
wire    ap_CS_fsm_state29;
wire   [13:0] tmp_40_fu_389_p1;
reg   [13:0] tmp_40_reg_609;
wire    ap_CS_fsm_state30;
reg   [6:0] acc_V_addr_2_reg_614;
wire    ap_CS_fsm_state31;
wire   [13:0] grp_product_fu_259_ap_return;
reg  signed [13:0] p_Val2_11_reg_619;
reg   [0:0] p_Result_s_reg_625;
wire    ap_CS_fsm_state33;
wire   [13:0] p_Val2_13_fu_419_p2;
reg   [13:0] p_Val2_13_reg_632;
reg   [0:0] p_Result_9_reg_637;
wire   [0:0] overflow_fu_437_p2;
reg   [0:0] overflow_reg_644;
wire    ap_CS_fsm_state34;
wire   [0:0] underflow_fu_447_p2;
reg   [0:0] underflow_reg_648;
wire   [0:0] brmerge1_fu_452_p2;
reg   [0:0] brmerge1_reg_652;
wire   [16:0] w_index_1_fu_456_p2;
reg   [16:0] w_index_1_reg_656;
wire    ap_CS_fsm_state35;
wire   [7:0] out_index_1_fu_467_p2;
wire    ap_CS_fsm_state36;
wire   [0:0] tmp_52_fu_462_p2;
wire   [31:0] in_index_1_fu_473_p2;
reg   [31:0] in_index_1_reg_670;
wire   [31:0] p_s_fu_484_p3;
wire    ap_CS_fsm_state37;
wire   [6:0] ires_1_fu_497_p2;
reg   [6:0] ires_1_reg_684;
wire    ap_CS_fsm_state38;
wire   [63:0] tmp_49_fu_503_p1;
reg   [63:0] tmp_49_reg_689;
wire   [0:0] tmp_47_fu_491_p2;
reg   [6:0] acc_V_address0;
reg    acc_V_ce0;
reg    acc_V_we0;
reg   [13:0] acc_V_d0;
wire    grp_product_fu_259_ap_start;
wire    grp_product_fu_259_ap_idle;
reg   [6:0] iacc_reg_183;
wire   [0:0] exitcond8_fu_270_p2;
reg   [13:0] w_index_reg_194;
reg  signed [31:0] in_index_reg_205;
reg   [2:0] im_reg_217;
reg   [7:0] out_index9_reg_228;
reg   [16:0] w_index9_reg_238;
reg   [6:0] ires_reg_248;
wire    ap_CS_fsm_state40;
reg    grp_product_fu_259_ap_start_reg;
wire   [63:0] tmp_fu_282_p1;
wire   [63:0] tmp_s_fu_303_p1;
wire  signed [63:0] tmp_46_fu_308_p1;
wire   [63:0] tmp_41_fu_338_p1;
wire   [63:0] tmp_50_fu_393_p1;
wire   [14:0] grp_fu_328_p1;
wire   [2:0] tmp_4_fu_342_p4;
wire   [3:0] p_shl8_fu_359_p3;
wire   [6:0] p_shl_fu_351_p3;
wire   [6:0] p_shl8_cast_fu_367_p1;
wire  signed [69:0] grp_fu_383_p0;
wire   [69:0] grp_fu_383_p1;
wire   [69:0] grp_fu_383_p2;
wire  signed [14:0] rhs_V_fu_402_p1;
wire  signed [14:0] lhs_V_fu_398_p1;
wire   [14:0] ret_V_fu_405_p2;
wire   [0:0] tmp_22_fu_432_p2;
wire   [0:0] tmp_51_fu_442_p2;
wire   [0:0] tmp_53_fu_479_p2;
wire   [18:0] grp_fu_508_p0;
wire   [16:0] grp_fu_508_p1;
reg    grp_fu_328_ap_start;
wire    grp_fu_328_ap_done;
reg   [39:0] ap_NS_fsm;
wire   [35:0] grp_fu_508_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_product_fu_259_ap_start_reg = 1'b0;
end

dense_large_rf_gt_ni_4_outidx5 #(
    .DataWidth( 5 ),
    .AddressRange( 13824 ),
    .AddressWidth( 14 ))
outidx5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outidx5_address0),
    .ce0(outidx5_ce0),
    .q0(outidx5_q0)
);

dense_large_rf_gt_ni_4_w11_V #(
    .DataWidth( 66 ),
    .AddressRange( 13824 ),
    .AddressWidth( 14 ))
w11_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w11_V_address0),
    .ce0(w11_V_ce0),
    .q0(w11_V_q0)
);

dense_large_rf_gt_ni_4_acc_V #(
    .DataWidth( 14 ),
    .AddressRange( 120 ),
    .AddressWidth( 7 ))
acc_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(acc_V_address0),
    .ce0(acc_V_ce0),
    .we0(acc_V_we0),
    .d0(acc_V_d0),
    .q0(acc_V_q0)
);

product grp_product_fu_259(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_product_fu_259_ap_start),
    .ap_done(grp_product_fu_259_ap_done),
    .ap_idle(grp_product_fu_259_ap_idle),
    .ap_ready(grp_product_fu_259_ap_ready),
    .a_V(data_V_load_reg_555),
    .w_V(tmp_40_reg_609),
    .ap_return(grp_product_fu_259_ap_return)
);

myproject_urem_17ns_15ns_17_21_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 17 ))
myproject_urem_17ns_15ns_17_21_seq_1_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_328_ap_start),
    .done(grp_fu_328_ap_done),
    .din0(w_index9_reg_238),
    .din1(grp_fu_328_p1),
    .ce(1'b1),
    .dout(grp_fu_328_p2)
);

myproject_lshr_70s_7ns_70_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 70 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 70 ))
myproject_lshr_70s_7ns_70_2_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_383_p0),
    .din1(grp_fu_383_p1),
    .ce(1'b1),
    .dout(grp_fu_383_p2)
);

myproject_mul_mul_19ns_17ns_36_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 36 ))
myproject_mul_mul_19ns_17ns_36_3_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_508_p0),
    .din1(grp_fu_508_p1),
    .ce(1'b1),
    .dout(grp_fu_508_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_product_fu_259_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state31)) begin
            grp_product_fu_259_ap_start_reg <= 1'b1;
        end else if ((grp_product_fu_259_ap_ready == 1'b1)) begin
            grp_product_fu_259_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        iacc_reg_183 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond8_fu_270_p2 == 1'd0))) begin
        iacc_reg_183 <= iacc_1_fu_276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (tmp_48_reg_560 == 1'd1) & (tmp_52_fu_462_p2 == 1'd0))) begin
        im_reg_217 <= im_1_reg_564;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        im_reg_217 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_index_reg_205 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        in_index_reg_205 <= p_s_fu_484_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_291_p2 == 1'd1))) begin
        ires_reg_248 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        ires_reg_248 <= ires_1_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (tmp_48_reg_560 == 1'd1) & (tmp_52_fu_462_p2 == 1'd0))) begin
        out_index9_reg_228 <= out_index_1_fu_467_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        out_index9_reg_228 <= out_index_cast_fu_313_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (tmp_48_reg_560 == 1'd1) & (tmp_52_fu_462_p2 == 1'd0))) begin
        w_index9_reg_238 <= w_index_1_reg_656;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        w_index9_reg_238 <= w_index_cast_reg_522;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        w_index_reg_194 <= 14'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        w_index_reg_194 <= ir_reg_530;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        acc_V_addr_2_reg_614 <= tmp_50_fu_393_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        brmerge1_reg_652 <= brmerge1_fu_452_p2;
        overflow_reg_644 <= overflow_fu_437_p2;
        underflow_reg_648 <= underflow_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_V_load_reg_555 <= data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        im_1_reg_564 <= im_1_fu_322_p2;
        tmp_48_reg_560 <= tmp_48_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & ((tmp_52_fu_462_p2 == 1'd1) | (tmp_48_reg_560 == 1'd0)))) begin
        in_index_1_reg_670 <= in_index_1_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ir_reg_530 <= ir_fu_297_p2;
        w_index_cast_reg_522[13 : 0] <= w_index_cast_fu_287_p1[13 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        ires_1_reg_684 <= ires_1_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        mul_reg_579 <= grp_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_index_reg_540 <= outidx5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        p_Result_9_reg_637 <= p_Val2_13_fu_419_p2[32'd13];
        p_Result_s_reg_625 <= ret_V_fu_405_p2[32'd14];
        p_Val2_13_reg_632 <= p_Val2_13_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_product_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        p_Val2_11_reg_619 <= grp_product_fu_259_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | ((grp_product_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32)))) begin
        reg_265 <= acc_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_39_reg_574 <= grp_fu_328_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_40_reg_609 <= tmp_40_fu_389_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_43_reg_594[6 : 1] <= tmp_43_fu_371_p2[6 : 1];
        w11_V_load_reg_589 <= w11_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) & (tmp_47_fu_491_p2 == 1'd0))) begin
        tmp_49_reg_689[6 : 0] <= tmp_49_fu_503_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        w_index_1_reg_656 <= w_index_1_fu_456_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        acc_V_address0 = tmp_49_fu_503_p1;
    end else if (((1'b1 == ap_CS_fsm_state34) | ((brmerge1_reg_652 == 1'd1) & (overflow_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((brmerge1_reg_652 == 1'd1) & (underflow_reg_648 == 1'd1) & (1'b1 == ap_CS_fsm_state35) & (overflow_reg_644 == 1'd0)))) begin
        acc_V_address0 = acc_V_addr_2_reg_614;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        acc_V_address0 = tmp_50_fu_393_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        acc_V_address0 = tmp_fu_282_p1;
    end else begin
        acc_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state2) | ((brmerge1_reg_652 == 1'd1) & (overflow_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((brmerge1_reg_652 == 1'd1) & (underflow_reg_648 == 1'd1) & (1'b1 == ap_CS_fsm_state35) & (overflow_reg_644 == 1'd0)))) begin
        acc_V_ce0 = 1'b1;
    end else begin
        acc_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge1_reg_652 == 1'd1) & (overflow_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state35))) begin
        acc_V_d0 = 14'd8191;
    end else if (((brmerge1_reg_652 == 1'd1) & (underflow_reg_648 == 1'd1) & (1'b1 == ap_CS_fsm_state35) & (overflow_reg_644 == 1'd0))) begin
        acc_V_d0 = 14'd8192;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        acc_V_d0 = p_Val2_13_reg_632;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        acc_V_d0 = 14'd0;
    end else begin
        acc_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | ((brmerge1_reg_652 == 1'd1) & (overflow_reg_644 == 1'd1) & (1'b1 == ap_CS_fsm_state35)) | ((brmerge1_reg_652 == 1'd1) & (underflow_reg_648 == 1'd1) & (1'b1 == ap_CS_fsm_state35) & (overflow_reg_644 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond8_fu_270_p2 == 1'd0)))) begin
        acc_V_we0 = 1'b1;
    end else begin
        acc_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_47_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_47_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_48_fu_316_p2 == 1'd1))) begin
        grp_fu_328_ap_start = 1'b1;
    end else begin
        grp_fu_328_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        outidx5_ce0 = 1'b1;
    end else begin
        outidx5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        res_V_ce0 = 1'b1;
    end else begin
        res_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        res_V_we0 = 1'b1;
    end else begin
        res_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        w11_V_ce0 = 1'b1;
    end else begin
        w11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond8_fu_270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_291_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (tmp_48_fu_316_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((grp_product_fu_259_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (tmp_48_reg_560 == 1'd1) & (tmp_52_fu_462_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state38 : begin
            if (((tmp_47_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign brmerge1_fu_452_p2 = (p_Result_s_reg_625 ^ p_Result_9_reg_637);

assign data_V_address0 = tmp_46_fu_308_p1;

assign exitcond8_fu_270_p2 = ((iacc_reg_183 == 7'd120) ? 1'b1 : 1'b0);

assign exitcond_fu_291_p2 = ((w_index_reg_194 == 14'd13824) ? 1'b1 : 1'b0);

assign grp_fu_328_p1 = 17'd13824;

assign grp_fu_383_p0 = $signed(w11_V_load_reg_589);

assign grp_fu_383_p1 = tmp_43_reg_594;

assign grp_fu_508_p0 = 36'd155345;

assign grp_fu_508_p1 = grp_fu_508_p10;

assign grp_fu_508_p10 = w_index9_reg_238;

assign grp_product_fu_259_ap_start = grp_product_fu_259_ap_start_reg;

assign iacc_1_fu_276_p2 = (iacc_reg_183 + 7'd1);

assign im_1_fu_322_p2 = (im_reg_217 + 3'd1);

assign in_index_1_fu_473_p2 = ($signed(in_index_reg_205) + $signed(32'd1));

assign ir_fu_297_p2 = (w_index_reg_194 + 14'd1);

assign ires_1_fu_497_p2 = (ires_reg_248 + 7'd1);

assign lhs_V_fu_398_p1 = reg_265;

assign out_index_1_fu_467_p2 = (out_index9_reg_228 + 8'd24);

assign out_index_cast_fu_313_p1 = out_index_reg_540;

assign outidx5_address0 = tmp_s_fu_303_p1;

assign overflow_fu_437_p2 = (tmp_22_fu_432_p2 & p_Result_9_reg_637);

assign p_Val2_13_fu_419_p2 = ($signed(p_Val2_11_reg_619) + $signed(reg_265));

assign p_s_fu_484_p3 = ((tmp_53_fu_479_p2[0:0] === 1'b1) ? 32'd0 : in_index_1_reg_670);

assign p_shl8_cast_fu_367_p1 = p_shl8_fu_359_p3;

assign p_shl8_fu_359_p3 = {{tmp_4_fu_342_p4}, {1'd0}};

assign p_shl_fu_351_p3 = {{tmp_4_fu_342_p4}, {4'd0}};

assign res_V_address0 = tmp_49_reg_689;

assign res_V_d0 = reg_265;

assign ret_V_fu_405_p2 = ($signed(rhs_V_fu_402_p1) + $signed(lhs_V_fu_398_p1));

assign rhs_V_fu_402_p1 = p_Val2_11_reg_619;

assign tmp_22_fu_432_p2 = (p_Result_s_reg_625 ^ 1'd1);

assign tmp_40_fu_389_p1 = grp_fu_383_p2[13:0];

assign tmp_41_fu_338_p1 = tmp_39_reg_574;

assign tmp_43_fu_371_p2 = (p_shl_fu_351_p3 - p_shl8_cast_fu_367_p1);

assign tmp_46_fu_308_p1 = in_index_reg_205;

assign tmp_47_fu_491_p2 = ((ires_reg_248 == 7'd120) ? 1'b1 : 1'b0);

assign tmp_48_fu_316_p2 = ((im_reg_217 < 3'd5) ? 1'b1 : 1'b0);

assign tmp_49_fu_503_p1 = ires_reg_248;

assign tmp_4_fu_342_p4 = {{mul_reg_579[33:31]}};

assign tmp_50_fu_393_p1 = out_index9_reg_228;

assign tmp_51_fu_442_p2 = (p_Result_9_reg_637 ^ 1'd1);

assign tmp_52_fu_462_p2 = ((w_index_1_reg_656 > 17'd69119) ? 1'b1 : 1'b0);

assign tmp_53_fu_479_p2 = (($signed(in_index_1_reg_670) > $signed(32'd575)) ? 1'b1 : 1'b0);

assign tmp_fu_282_p1 = iacc_reg_183;

assign tmp_s_fu_303_p1 = w_index_reg_194;

assign underflow_fu_447_p2 = (tmp_51_fu_442_p2 & p_Result_s_reg_625);

assign w11_V_address0 = tmp_41_fu_338_p1;

assign w_index_1_fu_456_p2 = (w_index9_reg_238 + 17'd13824);

assign w_index_cast_fu_287_p1 = w_index_reg_194;

always @ (posedge ap_clk) begin
    w_index_cast_reg_522[16:14] <= 3'b000;
    tmp_43_reg_594[0] <= 1'b0;
    tmp_49_reg_689[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //dense_large_rf_gt_ni_4
