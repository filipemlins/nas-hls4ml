// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V_address0,
        data_V_ce0,
        data_V_q0,
        res_V_address0,
        res_V_ce0,
        res_V_we0,
        res_V_d0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] data_V_address0;
output   data_V_ce0;
input  [13:0] data_V_q0;
output  [3:0] res_V_address0;
output   res_V_ce0;
output   res_V_we0;
output  [13:0] res_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_ce0;
reg res_V_ce0;
reg res_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] exp_table2_address0;
reg    exp_table2_ce0;
wire   [12:0] exp_table2_q0;
wire   [9:0] invert_table3_address0;
reg    invert_table3_ce0;
wire   [13:0] invert_table3_q0;
wire   [3:0] i_1_fu_178_p2;
reg   [3:0] i_1_reg_473;
wire    ap_CS_fsm_state2;
wire   [63:0] tmp_4_fu_184_p1;
reg   [63:0] tmp_4_reg_478;
wire   [0:0] tmp_fu_172_p2;
reg   [9:0] y_V_reg_488;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [12:0] exp_table2_load_reg_498;
wire    ap_CS_fsm_state5;
reg   [9:0] y_V_2_reg_503;
wire    ap_CS_fsm_state7;
wire    grp_reduce_2_fu_167_ap_ready;
wire    grp_reduce_2_fu_167_ap_done;
wire    ap_CS_fsm_state8;
wire  signed [26:0] tmp_3_cast_cast_cast_fu_217_p1;
reg  signed [26:0] tmp_3_cast_cast_cast_reg_513;
wire    ap_CS_fsm_state9;
wire   [3:0] i_2_fu_227_p2;
reg   [3:0] i_2_reg_521;
wire    ap_CS_fsm_state10;
wire   [63:0] tmp_8_fu_233_p1;
reg   [63:0] tmp_8_reg_526;
wire   [0:0] tmp_7_fu_221_p2;
wire   [12:0] exp_res_V_q0;
reg   [12:0] exp_res_V_load_reg_536;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire  signed [26:0] grp_fu_463_p2;
reg  signed [26:0] r_V_reg_546;
wire    ap_CS_fsm_state14;
reg   [0:0] p_Result_s_reg_555;
reg   [0:0] tmp_6_reg_561;
wire   [13:0] p_Val2_2_fu_274_p2;
reg   [13:0] p_Val2_2_reg_566;
wire    ap_CS_fsm_state15;
wire   [0:0] carry_1_fu_294_p2;
reg   [0:0] carry_1_reg_572;
wire   [0:0] p_Result_6_fu_300_p3;
reg   [0:0] p_Result_6_reg_577;
wire   [0:0] Range1_all_ones_fu_332_p2;
reg   [0:0] Range1_all_ones_reg_582;
wire   [0:0] Range1_all_zeros_fu_338_p2;
reg   [0:0] Range1_all_zeros_reg_587;
wire   [0:0] phitmp_demorgan_fu_371_p2;
reg   [0:0] phitmp_demorgan_reg_592;
wire   [0:0] brmerge192_demorgan_fu_377_p2;
reg   [0:0] brmerge192_demorgan_reg_598;
wire   [13:0] p_097_2_fu_455_p3;
reg   [13:0] p_097_2_reg_604;
wire    ap_CS_fsm_state16;
reg   [3:0] exp_res_V_address0;
reg    exp_res_V_ce0;
reg    exp_res_V_we0;
wire    grp_reduce_2_fu_167_ap_start;
wire    grp_reduce_2_fu_167_ap_idle;
wire   [3:0] grp_reduce_2_fu_167_x_V_address0;
wire    grp_reduce_2_fu_167_x_V_ce0;
wire   [17:0] grp_reduce_2_fu_167_ap_return;
reg   [3:0] i_reg_145;
wire    ap_CS_fsm_state6;
reg    ap_block_state1;
reg   [3:0] i3_reg_156;
wire    ap_CS_fsm_state17;
reg    grp_reduce_2_fu_167_ap_start_reg;
wire   [63:0] tmp_5_fu_199_p1;
wire   [63:0] tmp_2_fu_213_p1;
wire   [13:0] tmp_11_cast_fu_271_p1;
wire   [13:0] p_Val2_1_fu_255_p4;
wire   [0:0] tmp_9_fu_280_p3;
wire   [0:0] p_Result_5_fu_264_p3;
wire   [0:0] rev_fu_288_p2;
wire   [3:0] tmp_11_fu_308_p4;
wire   [4:0] tmp_12_fu_323_p4;
wire   [0:0] tmp_13_fu_344_p3;
wire   [0:0] Range2_all_ones_fu_317_p2;
wire   [0:0] rev1_fu_351_p2;
wire   [0:0] p_s_fu_357_p2;
wire   [0:0] deleted_ones_fu_363_p3;
wire   [0:0] deleted_zeros_fu_383_p3;
wire   [0:0] p_not_fu_388_p2;
wire   [0:0] brmerge_fu_394_p2;
wire   [0:0] tmp_s_fu_399_p2;
wire   [0:0] tmp1_demorgan_fu_410_p2;
wire   [0:0] tmp1_fu_414_p2;
wire   [0:0] underflow_fu_420_p2;
wire   [0:0] overflow_fu_404_p2;
wire   [0:0] tmp2_fu_431_p2;
wire   [0:0] brmerge2_fu_425_p2;
wire   [0:0] p_197_not_fu_436_p2;
wire   [13:0] p_mux_fu_441_p3;
wire   [13:0] p_3_fu_448_p3;
wire  signed [13:0] grp_fu_463_p0;
wire   [12:0] grp_fu_463_p1;
reg   [16:0] ap_NS_fsm;
wire   [26:0] grp_fu_463_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 17'd1;
#0 grp_reduce_2_fu_167_ap_start_reg = 1'b0;
end

softmax_exp_table2 #(
    .DataWidth( 13 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table2_address0),
    .ce0(exp_table2_ce0),
    .q0(exp_table2_q0)
);

softmax_invert_table3 #(
    .DataWidth( 14 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table3_address0),
    .ce0(invert_table3_ce0),
    .q0(invert_table3_q0)
);

softmax_exp_res_V #(
    .DataWidth( 13 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
exp_res_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_res_V_address0),
    .ce0(exp_res_V_ce0),
    .we0(exp_res_V_we0),
    .d0(exp_table2_load_reg_498),
    .q0(exp_res_V_q0)
);

reduce_2 grp_reduce_2_fu_167(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_reduce_2_fu_167_ap_start),
    .ap_done(grp_reduce_2_fu_167_ap_done),
    .ap_idle(grp_reduce_2_fu_167_ap_idle),
    .ap_ready(grp_reduce_2_fu_167_ap_ready),
    .x_V_address0(grp_reduce_2_fu_167_x_V_address0),
    .x_V_ce0(grp_reduce_2_fu_167_x_V_ce0),
    .x_V_q0(exp_res_V_q0),
    .ap_return(grp_reduce_2_fu_167_ap_return)
);

myproject_mul_mul_14s_13ns_27_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 27 ))
myproject_mul_mul_14s_13ns_27_3_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_463_p0),
    .din1(grp_fu_463_p1),
    .ce(1'b1),
    .dout(grp_fu_463_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state10) & (tmp_7_fu_221_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_reduce_2_fu_167_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_reduce_2_fu_167_ap_start_reg <= 1'b1;
        end else if ((grp_reduce_2_fu_167_ap_ready == 1'b1)) begin
            grp_reduce_2_fu_167_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i3_reg_156 <= i_2_reg_521;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i3_reg_156 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_145 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_145 <= i_1_reg_473;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        Range1_all_ones_reg_582 <= Range1_all_ones_fu_332_p2;
        Range1_all_zeros_reg_587 <= Range1_all_zeros_fu_338_p2;
        brmerge192_demorgan_reg_598 <= brmerge192_demorgan_fu_377_p2;
        carry_1_reg_572 <= carry_1_fu_294_p2;
        p_Result_6_reg_577 <= p_Val2_2_fu_274_p2[32'd13];
        p_Val2_2_reg_566 <= p_Val2_2_fu_274_p2;
        phitmp_demorgan_reg_592 <= phitmp_demorgan_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        exp_res_V_load_reg_536 <= exp_res_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        exp_table2_load_reg_498 <= exp_table2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_473 <= i_1_fu_178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_2_reg_521 <= i_2_fu_227_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_097_2_reg_604 <= p_097_2_fu_455_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_Result_s_reg_555 <= grp_fu_463_p2[32'd25];
        r_V_reg_546 <= grp_fu_463_p2;
        tmp_6_reg_561 <= grp_fu_463_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_3_cast_cast_cast_reg_513 <= tmp_3_cast_cast_cast_fu_217_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_172_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_4_reg_478[3 : 0] <= tmp_4_fu_184_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_7_fu_221_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_8_reg_526[3 : 0] <= tmp_8_fu_233_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_reduce_2_fu_167_ap_done == 1'b1))) begin
        y_V_2_reg_503 <= {{grp_reduce_2_fu_167_ap_return[17:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        y_V_reg_488 <= {{data_V_q0[13:4]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_7_fu_221_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) & (tmp_7_fu_221_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        data_V_ce0 = 1'b1;
    end else begin
        data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        exp_res_V_address0 = tmp_8_fu_233_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_res_V_address0 = tmp_4_reg_478;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        exp_res_V_address0 = grp_reduce_2_fu_167_x_V_address0;
    end else begin
        exp_res_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state10))) begin
        exp_res_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        exp_res_V_ce0 = grp_reduce_2_fu_167_x_V_ce0;
    end else begin
        exp_res_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_res_V_we0 = 1'b1;
    end else begin
        exp_res_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        exp_table2_ce0 = 1'b1;
    end else begin
        exp_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        invert_table3_ce0 = 1'b1;
    end else begin
        invert_table3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        res_V_ce0 = 1'b1;
    end else begin
        res_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        res_V_we0 = 1'b1;
    end else begin
        res_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_172_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_reduce_2_fu_167_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (tmp_7_fu_221_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_fu_332_p2 = ((tmp_12_fu_323_p4 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_338_p2 = ((tmp_12_fu_323_p4 == 5'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_317_p2 = ((tmp_11_fu_308_p4 == 4'd15) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign brmerge192_demorgan_fu_377_p2 = (p_Result_6_fu_300_p3 & deleted_ones_fu_363_p3);

assign brmerge2_fu_425_p2 = (underflow_fu_420_p2 | overflow_fu_404_p2);

assign brmerge_fu_394_p2 = (p_not_fu_388_p2 | p_Result_6_reg_577);

assign carry_1_fu_294_p2 = (rev_fu_288_p2 & p_Result_5_fu_264_p3);

assign data_V_address0 = tmp_4_fu_184_p1;

assign deleted_ones_fu_363_p3 = ((carry_1_fu_294_p2[0:0] === 1'b1) ? p_s_fu_357_p2 : Range1_all_ones_fu_332_p2);

assign deleted_zeros_fu_383_p3 = ((carry_1_reg_572[0:0] === 1'b1) ? Range1_all_ones_reg_582 : Range1_all_zeros_reg_587);

assign exp_table2_address0 = tmp_5_fu_199_p1;

assign grp_fu_463_p0 = tmp_3_cast_cast_cast_reg_513;

assign grp_fu_463_p1 = grp_fu_463_p10;

assign grp_fu_463_p10 = exp_res_V_load_reg_536;

assign grp_reduce_2_fu_167_ap_start = grp_reduce_2_fu_167_ap_start_reg;

assign i_1_fu_178_p2 = (i_reg_145 + 4'd1);

assign i_2_fu_227_p2 = (i3_reg_156 + 4'd1);

assign invert_table3_address0 = tmp_2_fu_213_p1;

assign overflow_fu_404_p2 = (tmp_s_fu_399_p2 & brmerge_fu_394_p2);

assign p_097_2_fu_455_p3 = ((p_197_not_fu_436_p2[0:0] === 1'b1) ? p_mux_fu_441_p3 : p_3_fu_448_p3);

assign p_197_not_fu_436_p2 = (tmp2_fu_431_p2 | phitmp_demorgan_reg_592);

assign p_3_fu_448_p3 = ((underflow_fu_420_p2[0:0] === 1'b1) ? 14'd8192 : p_Val2_2_reg_566);

assign p_Result_5_fu_264_p3 = r_V_reg_546[32'd21];

assign p_Result_6_fu_300_p3 = p_Val2_2_fu_274_p2[32'd13];

assign p_Val2_1_fu_255_p4 = {{r_V_reg_546[21:8]}};

assign p_Val2_2_fu_274_p2 = (tmp_11_cast_fu_271_p1 + p_Val2_1_fu_255_p4);

assign p_mux_fu_441_p3 = ((brmerge2_fu_425_p2[0:0] === 1'b1) ? 14'd8191 : p_Val2_2_reg_566);

assign p_not_fu_388_p2 = (deleted_zeros_fu_383_p3 ^ 1'd1);

assign p_s_fu_357_p2 = (rev1_fu_351_p2 & Range2_all_ones_fu_317_p2);

assign phitmp_demorgan_fu_371_p2 = (carry_1_fu_294_p2 & Range1_all_ones_fu_332_p2);

assign res_V_address0 = tmp_8_reg_526;

assign res_V_d0 = p_097_2_reg_604;

assign rev1_fu_351_p2 = (tmp_13_fu_344_p3 ^ 1'd1);

assign rev_fu_288_p2 = (tmp_9_fu_280_p3 ^ 1'd1);

assign tmp1_demorgan_fu_410_p2 = (phitmp_demorgan_reg_592 | brmerge192_demorgan_reg_598);

assign tmp1_fu_414_p2 = (tmp1_demorgan_fu_410_p2 ^ 1'd1);

assign tmp2_fu_431_p2 = (tmp_s_fu_399_p2 | brmerge192_demorgan_reg_598);

assign tmp_11_cast_fu_271_p1 = tmp_6_reg_561;

assign tmp_11_fu_308_p4 = {{r_V_reg_546[26:23]}};

assign tmp_12_fu_323_p4 = {{r_V_reg_546[26:22]}};

assign tmp_13_fu_344_p3 = r_V_reg_546[32'd22];

assign tmp_2_fu_213_p1 = y_V_2_reg_503;

assign tmp_3_cast_cast_cast_fu_217_p1 = $signed(invert_table3_q0);

assign tmp_4_fu_184_p1 = i_reg_145;

assign tmp_5_fu_199_p1 = y_V_reg_488;

assign tmp_7_fu_221_p2 = ((i3_reg_156 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_8_fu_233_p1 = i3_reg_156;

assign tmp_9_fu_280_p3 = p_Val2_2_fu_274_p2[32'd13];

assign tmp_fu_172_p2 = ((i_reg_145 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_s_fu_399_p2 = (p_Result_s_reg_555 ^ 1'd1);

assign underflow_fu_420_p2 = (tmp1_fu_414_p2 & p_Result_s_reg_555);

always @ (posedge ap_clk) begin
    tmp_4_reg_478[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    tmp_8_reg_526[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //softmax
