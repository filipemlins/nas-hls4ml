// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _im2col_2d_cl_1_HH_
#define _im2col_2d_cl_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct im2col_2d_cl_1 : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > data_V_address0;
    sc_out< sc_logic > data_V_ce0;
    sc_in< sc_lv<14> > data_V_q0;
    sc_out< sc_lv<4> > data_col_V_address0;
    sc_out< sc_logic > data_col_V_ce0;
    sc_out< sc_logic > data_col_V_we0;
    sc_out< sc_lv<14> > data_col_V_d0;
    sc_in< sc_lv<5> > row;
    sc_in< sc_lv<5> > col;


    // Module declarations
    im2col_2d_cl_1(sc_module_name name);
    SC_HAS_PROCESS(im2col_2d_cl_1);

    ~im2col_2d_cl_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > row_cast_fu_136_p1;
    sc_signal< sc_lv<6> > row_cast_reg_245;
    sc_signal< sc_lv<6> > col_cast_fu_140_p1;
    sc_signal< sc_lv<6> > col_cast_reg_250;
    sc_signal< sc_lv<3> > kernel_row_2_fu_154_p2;
    sc_signal< sc_lv<3> > kernel_row_2_reg_258;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > tmp_30_fu_165_p2;
    sc_signal< sc_lv<5> > tmp_30_reg_263;
    sc_signal< sc_lv<1> > tmp_s_fu_148_p2;
    sc_signal< sc_lv<1> > tmp_reg_268;
    sc_signal< sc_lv<11> > tmp_31_fu_179_p3;
    sc_signal< sc_lv<11> > tmp_31_reg_272;
    sc_signal< sc_lv<3> > kernel_col_2_fu_197_p2;
    sc_signal< sc_lv<3> > kernel_col_2_reg_280;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_34_fu_212_p3;
    sc_signal< sc_lv<1> > tmp_34_reg_285;
    sc_signal< sc_lv<1> > tmp_32_fu_191_p2;
    sc_signal< sc_lv<64> > tmp_35_fu_220_p1;
    sc_signal< sc_lv<64> > tmp_35_reg_289;
    sc_signal< sc_lv<11> > tmp_36_fu_225_p2;
    sc_signal< sc_lv<11> > tmp_36_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<14> > data_V_load_reg_304;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > index_4_fu_239_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<5> > index_1_reg_91;
    sc_signal< sc_lv<3> > kernel_row_reg_103;
    sc_signal< sc_lv<5> > index_2_reg_114;
    sc_signal< sc_lv<3> > kernel_col_reg_125;
    sc_signal< sc_lv<64> > tmp_33_fu_230_p1;
    sc_signal< sc_lv<64> > tmp_37_fu_235_p1;
    sc_signal< sc_lv<6> > kernel_row_cast_fu_144_p1;
    sc_signal< sc_lv<6> > input_row_fu_160_p2;
    sc_signal< sc_lv<6> > kernel_col_cast_fu_187_p1;
    sc_signal< sc_lv<6> > input_col_fu_203_p2;
    sc_signal< sc_lv<11> > input_col_cast_cast_fu_208_p1;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<14> ap_const_lv14_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_col_cast_fu_140_p1();
    void thread_data_V_address0();
    void thread_data_V_ce0();
    void thread_data_col_V_address0();
    void thread_data_col_V_ce0();
    void thread_data_col_V_d0();
    void thread_data_col_V_we0();
    void thread_index_4_fu_239_p2();
    void thread_input_col_cast_cast_fu_208_p1();
    void thread_input_col_fu_203_p2();
    void thread_input_row_fu_160_p2();
    void thread_kernel_col_2_fu_197_p2();
    void thread_kernel_col_cast_fu_187_p1();
    void thread_kernel_row_2_fu_154_p2();
    void thread_kernel_row_cast_fu_144_p1();
    void thread_row_cast_fu_136_p1();
    void thread_tmp_30_fu_165_p2();
    void thread_tmp_31_fu_179_p3();
    void thread_tmp_32_fu_191_p2();
    void thread_tmp_33_fu_230_p1();
    void thread_tmp_34_fu_212_p3();
    void thread_tmp_35_fu_220_p1();
    void thread_tmp_36_fu_225_p2();
    void thread_tmp_37_fu_235_p1();
    void thread_tmp_s_fu_148_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
