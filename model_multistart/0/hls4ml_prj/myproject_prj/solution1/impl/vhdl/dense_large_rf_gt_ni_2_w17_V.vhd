-- ==============================================================
-- File generated on Mon Mar 01 22:17:23 -03 2021
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
-- SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
-- IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dense_large_rf_gt_ni_2_w17_V_rom is 
    generic(
             DWIDTH     : integer := 18; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 420
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of dense_large_rf_gt_ni_2_w17_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "111100000000000011", 1 => "111011111111111011", 
    2 => "010000000000000000", 3 => "110011111111111100", 
    4 => "111100000000000110", 5 => "111100000000000011", 
    6 => "001011111111111100", 7 => "000111111111111011", 
    8 => "111111111111111110", 9 => "111100000000000100", 
    10 => "010100000000000100", 11 => "000000000000000000", 
    12 => "001011111111111010", 13 => "001100000000000010", 
    14 => "101100000000000101", 15 => "001100000000000101", 
    16 => "001111111111111100", 17 => "111111111111111110", 
    18 => "101011111111111100", 19 => "111000000000000011", 
    20 => "101100000000000110", 21 => "001100000000000011", 
    22 => "111100000000000010", 23 => "111000000000000000", 
    24 => "010100000000000000", 25 => "111100000000000110", 
    26 => "110011111111111011", 27 => "000111111111111101", 
    28 => "111111111111111101", 29 => "111100000000000011", 
    30 => "111100000000000101", 31 => "110111111111111110", 
    32 => "000011111111111011", 33 => "000000000000000001", 
    34 => "010100000000000110", 35 => "111100000000000010", 
    36 => "101011111111111111", 37 => "001100000000000010", 
    38 => "010000000000000000", 39 => "001100000000000000", 
    40 => "001000000000000000", 41 => "010111111111111010", 
    42 => "110011111111111110", 43 => "101011111111111011", 
    44 to 45=> "001111111111111110", 46 => "101000000000000000", 
    47 => "110000000000000100", 48 => "001100000000000100", 
    49 => "111000000000000000", 50 => "110000000000000000", 
    51 => "110011111111111110", 52 => "111011111111111011", 
    53 => "001100000000000010", 54 => "001100000000000011", 
    55 => "101100000000000001", 56 => "101100000000000010", 
    57 => "101011111111111100", 58 => "001111111111111100", 
    59 => "010111111111111101", 60 => "011000000000000001", 
    61 => "110111111111111111", 62 => "110100000000000001", 
    63 => "010100000000000110", 64 => "000011111111111100", 
    65 => "101000000000000100", 66 => "000100000000000001", 
    67 => "000000000000000100", 68 => "101000000000000001", 
    69 => "111011111111111010", 70 => "101100000000000101", 
    71 => "001000000000000011", 72 => "010100000000000011", 
    73 => "111011111111111110", 74 => "111011111111111011", 
    75 => "000100000000000010", 76 => "000111111111111101", 
    77 => "001100000000000011", 78 => "010011111111111100", 
    79 => "110111111111111101", 80 => "101000000000000010", 
    81 => "111100000000000100", 82 => "001111111111111010", 
    83 => "001000000000000011", 84 => "111111111111111100", 
    85 => "110000000000000001", 86 => "000111111111111011", 
    87 => "110111111111111010", 88 => "111000000000000100", 
    89 => "001100000000000011", 90 => "110111111111111111", 
    91 => "110000000000000010", 92 => "110100000000000100", 
    93 => "001111111111111010", 94 => "110111111111111101", 
    95 => "101111111111111101", 96 => "110000000000000101", 
    97 => "101111111111111101", 98 => "010100000000000001", 
    99 => "111000000000000010", 100 => "101111111111111111", 
    101 => "110011111111111101", 102 => "101011111111111110", 
    103 => "110000000000000011", 104 => "111100000000000000", 
    105 => "010000000000000010", 106 => "111111111111111101", 
    107 => "110000000000000001", 108 => "110111111111111010", 
    109 => "101111111111111010", 110 => "000100000000000100", 
    111 => "101111111111111101", 112 => "111100000000000101", 
    113 => "111011111111111101", 114 => "111000000000000110", 
    115 => "010011111111111101", 116 => "101111111111111100", 
    117 => "101111111111111111", 118 => "110000000000000001", 
    119 => "001100000000000100", 120 => "110111111111111011", 
    121 => "111000000000000010", 122 => "000100000000000101", 
    123 => "000000000000000010", 124 => "111000000000000001", 
    125 => "110000000000000100", 126 => "001000000000000001", 
    127 => "010111111111111111", 128 => "000000000000000011", 
    129 => "011000000000000001", 130 => "010111111111111110", 
    131 => "111100000000000100", 132 => "110000000000000110", 
    133 => "111111111111111110", 134 => "110000000000000101", 
    135 => "110000000000000100", 136 => "111011111111111101", 
    137 => "110100000000000011", 138 => "111100000000000010", 
    139 => "101100000000000011", 140 => "101100000000000000", 
    141 => "000000000000000100", 142 => "001011111111111110", 
    143 => "000011111111111010", 144 => "000111111111111110", 
    145 => "001000000000000010", 146 => "111000000000000101", 
    147 => "110000000000000001", 148 => "101100000000000000", 
    149 => "001000000000000101", 150 => "010100000000000100", 
    151 => "001100000000000001", 152 => "010111111111111101", 
    153 => "110000000000000101", 154 => "001111111111111101", 
    155 => "101100000000000000", 156 => "111011111111111011", 
    157 => "110100000000000001", 158 => "101000000000000001", 
    159 => "101011111111111110", 160 => "001011111111111100", 
    161 => "001011111111111011", 162 => "101111111111111011", 
    163 => "011000000000000010", 164 => "000000000000000010", 
    165 => "000011111111111111", 166 => "000011111111111101", 
    167 => "111011111111111011", 168 => "101000000000000110", 
    169 => "101100000000000100", 170 => "000100000000000000", 
    171 => "001111111111111111", 172 => "001100000000000000", 
    173 => "001011111111111111", 174 => "010000000000000001", 
    175 => "110011111111111011", 176 => "111000000000000101", 
    177 => "000111111111111101", 178 => "010011111111111110", 
    179 => "101100000000000010", 180 => "010000000000000101", 
    181 => "111000000000000001", 182 => "001000000000000110", 
    183 => "010111111111111011", 184 => "010100000000000101", 
    185 => "111100000000000011", 186 to 187=> "001100000000000100", 
    188 => "010100000000000001", 189 => "001000000000000101", 
    190 => "001111111111111111", 191 => "101100000000000010", 
    192 => "110100000000000000", 193 => "110000000000000010", 
    194 => "111011111111111010", 195 => "110000000000000101", 
    196 => "001100000000000010", 197 => "110100000000000101", 
    198 => "101111111111111110", 199 => "111000000000000001", 
    200 => "010100000000000100", 201 => "000111111111111111", 
    202 to 203=> "110000000000000000", 204 => "010011111111111101", 
    205 => "110100000000000101", 206 => "110111111111111110", 
    207 => "001011111111111110", 208 => "111000000000000100", 
    209 => "011000000000000011", 210 => "101100000000000100", 
    211 => "101111111111111011", 212 => "011011111111111100", 
    213 => "001011111111111101", 214 => "111000000000000010", 
    215 => "111000000000000101", 216 => "010000000000000101", 
    217 => "010000000000000110", 218 => "000111111111111101", 
    219 => "111000000000000100", 220 => "111000000000000101", 
    221 => "111000000000000011", 222 => "101011111111111110", 
    223 => "000000000000000011", 224 => "110111111111111011", 
    225 => "001011111111111011", 226 => "000000000000000110", 
    227 => "101100000000000001", 228 => "111011111111111110", 
    229 => "001000000000000011", 230 => "001100000000000010", 
    231 => "101000000000000101", 232 => "000011111111111011", 
    233 => "010100000000000011", 234 => "010000000000000110", 
    235 => "110011111111111110", 236 => "101100000000000001", 
    237 => "010000000000000000", 238 => "000011111111111011", 
    239 => "111000000000000010", 240 => "000100000000000100", 
    241 => "110011111111111101", 242 => "000100000000000011", 
    243 => "110111111111111111", 244 => "001111111111111101", 
    245 => "000100000000000001", 246 => "101100000000000110", 
    247 => "101111111111111011", 248 => "101100000000000000", 
    249 => "110000000000000000", 250 => "000111111111111100", 
    251 => "101100000000000100", 252 => "010100000000000010", 
    253 => "001011111111111101", 254 => "000000000000000100", 
    255 => "111000000000000011", 256 => "001111111111111111", 
    257 => "010111111111111100", 258 => "111011111111111011", 
    259 => "000111111111111111", 260 => "101011111111111010", 
    261 => "001100000000000101", 262 => "010000000000000010", 
    263 => "000000000000000001", 264 => "000000000000000011", 
    265 => "110111111111111110", 266 => "001100000000000010", 
    267 => "011011111111111011", 268 => "010000000000000100", 
    269 => "111000000000000101", 270 => "111000000000000001", 
    271 to 272=> "111111111111111011", 273 => "001011111111111110", 
    274 => "010000000000000100", 275 => "101011111111111011", 
    276 => "000000000000000110", 277 => "101011111111111101", 
    278 => "101111111111111111", 279 => "010000000000000110", 
    280 => "001111111111111011", 281 => "110000000000000001", 
    282 => "101100000000000001", 283 => "111000000000000100", 
    284 => "111011111111111111", 285 => "111000000000000010", 
    286 => "110000000000000110", 287 => "111100000000000101", 
    288 => "010011111111111110", 289 => "001111111111111011", 
    290 => "010111111111111101", 291 => "010011111111111100", 
    292 => "001000000000000010", 293 => "101011111111111100", 
    294 => "111111111111111110", 295 => "110000000000000000", 
    296 => "110011111111111010", 297 => "110111111111111011", 
    298 => "111100000000000011", 299 => "001100000000000100", 
    300 => "000011111111111100", 301 => "110000000000000001", 
    302 => "000011111111111111", 303 => "001011111111111011", 
    304 => "010011111111111101", 305 => "110111111111111101", 
    306 => "101000000000000100", 307 => "011011111111111110", 
    308 => "111100000000000101", 309 => "001000000000000001", 
    310 => "111111111111111010", 311 => "110011111111111011", 
    312 => "111100000000000001", 313 => "010100000000000001", 
    314 => "001000000000000010", 315 => "010111111111111010", 
    316 => "110111111111111100", 317 => "001111111111111101", 
    318 => "101111111111111100", 319 => "111000000000000101", 
    320 => "001111111111111111", 321 => "101100000000000010", 
    322 => "000100000000000000", 323 => "110111111111111110", 
    324 => "110011111111111110", 325 => "101100000000000011", 
    326 => "010000000000000011", 327 => "111100000000000100", 
    328 => "111000000000000011", 329 => "010100000000000010", 
    330 => "000000000000000010", 331 => "001111111111111011", 
    332 => "110011111111111110", 333 => "000000000000000100", 
    334 => "111011111111111100", 335 => "000111111111111100", 
    336 => "111111111111111111", 337 => "010011111111111101", 
    338 => "001011111111111100", 339 => "110011111111111110", 
    340 => "101100000000000101", 341 => "111011111111111010", 
    342 => "110111111111111100", 343 => "110011111111111110", 
    344 => "000011111111111011", 345 => "010111111111111010", 
    346 => "110100000000000000", 347 => "010100000000000011", 
    348 => "010100000000000101", 349 => "110111111111111111", 
    350 => "000011111111111011", 351 => "110000000000000001", 
    352 => "010111111111111011", 353 => "110111111111111011", 
    354 => "110111111111111010", 355 => "111011111111111010", 
    356 => "000000000000000000", 357 => "001100000000000011", 
    358 => "101111111111111100", 359 => "111111111111111011", 
    360 => "000100000000000000", 361 => "010100000000000011", 
    362 => "000000000000000001", 363 to 364=> "001000000000000010", 
    365 => "010000000000000101", 366 => "110000000000000001", 
    367 => "111011111111111111", 368 => "001100000000000100", 
    369 => "111100000000000010", 370 => "110000000000000101", 
    371 => "101111111111111010", 372 => "110000000000000001", 
    373 => "000111111111111110", 374 => "101111111111111110", 
    375 => "101100000000000011", 376 => "001011111111111110", 
    377 => "001000000000000101", 378 => "111000000000000110", 
    379 => "010000000000000001", 380 => "001111111111111011", 
    381 => "000011111111111011", 382 => "111000000000000001", 
    383 => "111111111111111010", 384 => "110011111111111110", 
    385 => "110100000000000110", 386 => "101011111111111011", 
    387 => "001000000000000011", 388 => "001000000000000001", 
    389 => "010000000000000011", 390 => "010000000000000001", 
    391 => "001100000000000000", 392 => "001111111111111111", 
    393 => "000000000000000100", 394 => "111111111111111011", 
    395 => "111011111111111100", 396 => "111000000000000010", 
    397 => "010000000000000001", 398 => "101111111111111011", 
    399 => "101111111111111101", 400 => "000000000000000000", 
    401 => "010111111111111101", 402 => "010011111111111101", 
    403 => "001100000000000110", 404 => "101111111111111010", 
    405 => "110111111111111100", 406 => "001100000000000100", 
    407 => "000100000000000000", 408 => "001011111111111011", 
    409 => "101000000000000011", 410 => "000100000000000011", 
    411 => "010011111111111011", 412 => "000100000000000011", 
    413 => "110000000000000000", 414 => "010100000000000010", 
    415 => "010111111111111100", 416 => "000000000000000101", 
    417 => "111000000000000010", 418 => "110000000000000001", 
    419 => "011000000000000011" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity dense_large_rf_gt_ni_2_w17_V is
    generic (
        DataWidth : INTEGER := 18;
        AddressRange : INTEGER := 420;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dense_large_rf_gt_ni_2_w17_V is
    component dense_large_rf_gt_ni_2_w17_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dense_large_rf_gt_ni_2_w17_V_rom_U :  component dense_large_rf_gt_ni_2_w17_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


