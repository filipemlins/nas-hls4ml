// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module init_exp_table (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        table_out_V_address0,
        table_out_V_ce0,
        table_out_V_we0,
        table_out_V_d0
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] table_out_V_address0;
output   table_out_V_ce0;
output   table_out_V_we0;
output  [17:0] table_out_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg table_out_V_ce0;
reg table_out_V_we0;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [10:0] i_fu_153_p2;
reg   [10:0] i_reg_746;
wire    ap_CS_fsm_state2;
wire   [12:0] tmp_V_3_fu_163_p3;
reg   [12:0] tmp_V_3_reg_751;
wire   [0:0] tmp_fu_147_p2;
wire   [12:0] tmp_V_fu_171_p2;
reg   [12:0] tmp_V_reg_757;
wire   [0:0] tmp_i_fu_177_p2;
reg   [0:0] tmp_i_reg_762;
wire    ap_CS_fsm_state3;
wire   [0:0] p_Result_18_fu_182_p3;
reg   [0:0] p_Result_18_reg_767;
wire   [12:0] tmp_V_4_fu_190_p3;
reg   [12:0] tmp_V_4_reg_772;
wire   [31:0] tmp_2_i_fu_222_p2;
reg   [31:0] tmp_2_i_reg_780;
wire   [12:0] tmp_53_fu_228_p1;
reg   [12:0] tmp_53_reg_787;
wire   [3:0] tmp_55_fu_232_p1;
reg   [3:0] tmp_55_reg_792;
wire   [7:0] tmp_62_fu_236_p1;
reg   [7:0] tmp_62_reg_797;
wire   [31:0] tmp_6_i_fu_331_p3;
reg   [31:0] tmp_6_i_reg_802;
wire    ap_CS_fsm_state4;
wire   [0:0] tmp_10_i_fu_339_p2;
reg   [0:0] tmp_10_i_reg_807;
wire   [31:0] tmp_11_i_fu_345_p2;
reg   [31:0] tmp_11_i_reg_812;
wire   [31:0] tmp_14_i_fu_350_p2;
reg   [31:0] tmp_14_i_reg_817;
wire   [31:0] x_fu_463_p3;
reg   [31:0] x_reg_822;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_142_p2;
reg   [31:0] v_assign_reg_827;
wire    ap_CS_fsm_state15;
reg   [0:0] p_Result_21_reg_833;
wire    ap_CS_fsm_state16;
wire   [51:0] tmp_66_fu_500_p1;
reg   [51:0] tmp_66_reg_838;
wire   [0:0] tmp_38_fu_504_p2;
reg   [0:0] tmp_38_reg_843;
wire   [11:0] F2_fu_510_p2;
reg   [11:0] F2_reg_849;
wire   [53:0] man_V_2_fu_533_p3;
reg   [53:0] man_V_2_reg_857;
wire    ap_CS_fsm_state17;
wire  signed [11:0] sh_amt_fu_555_p3;
reg  signed [11:0] sh_amt_reg_862;
wire   [17:0] tmp_67_fu_568_p1;
reg   [17:0] tmp_67_reg_868;
wire   [0:0] sel_tmp4_fu_661_p2;
reg   [0:0] sel_tmp4_reg_873;
wire   [0:0] or_cond_fu_667_p2;
reg   [0:0] or_cond_reg_878;
wire   [17:0] newSel1_fu_673_p3;
reg   [17:0] newSel1_reg_883;
wire   [0:0] or_cond2_fu_687_p2;
reg   [0:0] or_cond2_reg_888;
reg   [10:0] i_assign_reg_127;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_50_fu_738_p1;
wire    ap_CS_fsm_state6;
wire   [9:0] tmp_44_fu_159_p1;
reg   [12:0] p_Result_s_fu_196_p4;
wire   [31:0] p_Result_19_fu_206_p3;
reg   [31:0] l_fu_214_p3;
wire   [31:0] lsb_index_fu_240_p2;
wire   [30:0] tmp_54_fu_245_p4;
wire   [3:0] tmp_56_fu_261_p2;
wire   [12:0] tmp_57_fu_266_p1;
wire   [12:0] tmp_58_fu_270_p2;
wire   [12:0] p_Result_14_fu_276_p2;
wire   [0:0] icmp_fu_255_p2;
wire   [0:0] tmp_5_i_fu_281_p2;
wire   [0:0] tmp_60_fu_293_p3;
wire   [12:0] tmp_8_i_fu_307_p2;
wire   [0:0] p_Result_3_fu_312_p3;
wire   [0:0] rev_fu_301_p2;
wire   [0:0] tmp_i_52_fu_319_p2;
wire   [0:0] a_fu_287_p2;
wire   [0:0] tmp_9_i_fu_325_p2;
wire   [31:0] m_cast_i_fu_358_p1;
wire   [31:0] tmp_13_i_fu_361_p2;
wire   [63:0] m_fu_355_p1;
wire   [63:0] tmp_15_i_fu_370_p1;
wire   [63:0] tmp_13_cast_i_fu_366_p1;
wire   [63:0] tmp_16_i_fu_373_p2;
wire   [63:0] m_1_fu_379_p3;
wire   [63:0] tmp_17_i_fu_386_p1;
wire   [63:0] m_2_fu_389_p2;
wire   [62:0] m_5_fu_395_p4;
wire   [0:0] tmp_61_fu_409_p3;
wire   [7:0] tmp_23_cast_i_cast_c_fu_417_p3;
wire   [7:0] tmp_19_i_fu_425_p2;
wire   [7:0] p_Repl2_3_trunc_i_fu_430_p2;
wire   [63:0] m_6_fu_405_p1;
wire   [8:0] tmp_21_i_fu_436_p3;
wire   [63:0] p_Result_20_fu_443_p5;
wire   [31:0] tmp_63_fu_455_p1;
wire   [31:0] tmp_20_i_fu_459_p1;
wire   [63:0] d_assign_fu_139_p1;
wire   [63:0] ireg_V_fu_470_p1;
wire   [10:0] exp_tmp_V_fu_486_p4;
wire   [62:0] tmp_64_fu_474_p1;
wire   [11:0] tmp_s_fu_496_p1;
wire   [52:0] tmp_27_fu_516_p3;
wire   [53:0] p_Result_22_fu_523_p1;
wire   [53:0] man_V_1_fu_527_p2;
wire   [0:0] tmp_39_fu_540_p2;
wire   [11:0] tmp_40_fu_545_p2;
wire   [11:0] tmp_41_fu_550_p2;
wire   [31:0] ireg_V_to_int_fu_584_p1;
wire   [0:0] tmp_69_fu_587_p3;
wire   [0:0] tmp_42_fu_563_p2;
wire   [0:0] sel_tmp1_fu_603_p2;
wire   [0:0] sel_tmp6_demorgan_fu_614_p2;
wire   [0:0] sel_tmp6_fu_619_p2;
wire   [0:0] tmp_43_fu_572_p2;
wire   [0:0] sel_tmp7_fu_625_p2;
wire   [0:0] sel_tmp8_fu_631_p2;
wire   [0:0] sel_tmp21_demorgan_fu_649_p2;
wire   [0:0] tmp_45_fu_578_p2;
wire   [0:0] sel_tmp3_fu_655_p2;
wire   [0:0] sel_tmp_fu_643_p2;
wire   [0:0] sel_tmp9_fu_637_p2;
wire   [17:0] tmp_48_fu_595_p3;
wire   [0:0] sel_tmp2_fu_608_p2;
wire   [0:0] or_cond1_fu_681_p2;
wire  signed [31:0] sh_amt_cast_fu_696_p1;
wire   [53:0] tmp_46_fu_699_p1;
wire   [53:0] tmp_47_fu_703_p2;
wire  signed [17:0] sh_amt_cast2_fu_693_p1;
wire   [17:0] tmp_49_fu_712_p2;
wire   [17:0] tmp_68_fu_708_p1;
wire   [17:0] newSel_fu_717_p3;
wire   [17:0] newSel2_fu_724_p3;
reg   [17:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
end

myproject_fpext_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_fpext_32ns_64_1_1_U77(
    .din0(v_assign_reg_827),
    .dout(d_assign_fu_139_p1)
);

myproject_fexp_32ns_32ns_32_10_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_fexp_32ns_32ns_32_10_full_dsp_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_reg_822),
    .ce(1'b1),
    .dout(grp_fu_142_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_assign_reg_127 <= i_reg_746;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_assign_reg_127 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        F2_reg_849 <= F2_fu_510_p2;
        p_Result_21_reg_833 <= ireg_V_fu_470_p1[32'd63];
        tmp_38_reg_843 <= tmp_38_fu_504_p2;
        tmp_66_reg_838 <= tmp_66_fu_500_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_746 <= i_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        man_V_2_reg_857 <= man_V_2_fu_533_p3;
        newSel1_reg_883 <= newSel1_fu_673_p3;
        or_cond2_reg_888 <= or_cond2_fu_687_p2;
        or_cond_reg_878 <= or_cond_fu_667_p2;
        sel_tmp4_reg_873 <= sel_tmp4_fu_661_p2;
        sh_amt_reg_862 <= sh_amt_fu_555_p3;
        tmp_67_reg_868 <= tmp_67_fu_568_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Result_18_reg_767 <= i_assign_reg_127[32'd9];
        tmp_2_i_reg_780 <= tmp_2_i_fu_222_p2;
        tmp_53_reg_787 <= tmp_53_fu_228_p1;
        tmp_55_reg_792 <= tmp_55_fu_232_p1;
        tmp_62_reg_797 <= tmp_62_fu_236_p1;
        tmp_V_4_reg_772[12 : 3] <= tmp_V_4_fu_190_p3[12 : 3];
        tmp_i_reg_762 <= tmp_i_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_762 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_10_i_reg_807 <= tmp_10_i_fu_339_p2;
        tmp_11_i_reg_812 <= tmp_11_i_fu_345_p2;
        tmp_14_i_reg_817 <= tmp_14_i_fu_350_p2;
        tmp_6_i_reg_802[0] <= tmp_6_i_fu_331_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_147_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_3_reg_751[12 : 3] <= tmp_V_3_fu_163_p3[12 : 3];
        tmp_V_reg_757[12 : 3] <= tmp_V_fu_171_p2[12 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        v_assign_reg_827 <= grp_fu_142_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        x_reg_822 <= x_fu_463_p3;
    end
end

always @ (*) begin
    if ((((tmp_fu_147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        table_out_V_ce0 = 1'b1;
    end else begin
        table_out_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        table_out_V_we0 = 1'b1;
    end else begin
        table_out_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_fu_147_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_510_p2 = (12'd1075 - tmp_s_fu_496_p1);

assign a_fu_287_p2 = (tmp_5_i_fu_281_p2 & icmp_fu_255_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign exp_tmp_V_fu_486_p4 = {{ireg_V_fu_470_p1[62:52]}};

assign i_fu_153_p2 = (i_assign_reg_127 + 11'd1);

assign icmp_fu_255_p2 = (($signed(tmp_54_fu_245_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign ireg_V_fu_470_p1 = d_assign_fu_139_p1;

assign ireg_V_to_int_fu_584_p1 = v_assign_reg_827;


always @ (p_Result_19_fu_206_p3) begin
    if (p_Result_19_fu_206_p3[0] == 1'b1) begin
        l_fu_214_p3 = 32'd0;
    end else if (p_Result_19_fu_206_p3[1] == 1'b1) begin
        l_fu_214_p3 = 32'd1;
    end else if (p_Result_19_fu_206_p3[2] == 1'b1) begin
        l_fu_214_p3 = 32'd2;
    end else if (p_Result_19_fu_206_p3[3] == 1'b1) begin
        l_fu_214_p3 = 32'd3;
    end else if (p_Result_19_fu_206_p3[4] == 1'b1) begin
        l_fu_214_p3 = 32'd4;
    end else if (p_Result_19_fu_206_p3[5] == 1'b1) begin
        l_fu_214_p3 = 32'd5;
    end else if (p_Result_19_fu_206_p3[6] == 1'b1) begin
        l_fu_214_p3 = 32'd6;
    end else if (p_Result_19_fu_206_p3[7] == 1'b1) begin
        l_fu_214_p3 = 32'd7;
    end else if (p_Result_19_fu_206_p3[8] == 1'b1) begin
        l_fu_214_p3 = 32'd8;
    end else if (p_Result_19_fu_206_p3[9] == 1'b1) begin
        l_fu_214_p3 = 32'd9;
    end else if (p_Result_19_fu_206_p3[10] == 1'b1) begin
        l_fu_214_p3 = 32'd10;
    end else if (p_Result_19_fu_206_p3[11] == 1'b1) begin
        l_fu_214_p3 = 32'd11;
    end else if (p_Result_19_fu_206_p3[12] == 1'b1) begin
        l_fu_214_p3 = 32'd12;
    end else if (p_Result_19_fu_206_p3[13] == 1'b1) begin
        l_fu_214_p3 = 32'd13;
    end else if (p_Result_19_fu_206_p3[14] == 1'b1) begin
        l_fu_214_p3 = 32'd14;
    end else if (p_Result_19_fu_206_p3[15] == 1'b1) begin
        l_fu_214_p3 = 32'd15;
    end else if (p_Result_19_fu_206_p3[16] == 1'b1) begin
        l_fu_214_p3 = 32'd16;
    end else if (p_Result_19_fu_206_p3[17] == 1'b1) begin
        l_fu_214_p3 = 32'd17;
    end else if (p_Result_19_fu_206_p3[18] == 1'b1) begin
        l_fu_214_p3 = 32'd18;
    end else if (p_Result_19_fu_206_p3[19] == 1'b1) begin
        l_fu_214_p3 = 32'd19;
    end else if (p_Result_19_fu_206_p3[20] == 1'b1) begin
        l_fu_214_p3 = 32'd20;
    end else if (p_Result_19_fu_206_p3[21] == 1'b1) begin
        l_fu_214_p3 = 32'd21;
    end else if (p_Result_19_fu_206_p3[22] == 1'b1) begin
        l_fu_214_p3 = 32'd22;
    end else if (p_Result_19_fu_206_p3[23] == 1'b1) begin
        l_fu_214_p3 = 32'd23;
    end else if (p_Result_19_fu_206_p3[24] == 1'b1) begin
        l_fu_214_p3 = 32'd24;
    end else if (p_Result_19_fu_206_p3[25] == 1'b1) begin
        l_fu_214_p3 = 32'd25;
    end else if (p_Result_19_fu_206_p3[26] == 1'b1) begin
        l_fu_214_p3 = 32'd26;
    end else if (p_Result_19_fu_206_p3[27] == 1'b1) begin
        l_fu_214_p3 = 32'd27;
    end else if (p_Result_19_fu_206_p3[28] == 1'b1) begin
        l_fu_214_p3 = 32'd28;
    end else if (p_Result_19_fu_206_p3[29] == 1'b1) begin
        l_fu_214_p3 = 32'd29;
    end else if (p_Result_19_fu_206_p3[30] == 1'b1) begin
        l_fu_214_p3 = 32'd30;
    end else if (p_Result_19_fu_206_p3[31] == 1'b1) begin
        l_fu_214_p3 = 32'd31;
    end else begin
        l_fu_214_p3 = 32'd32;
    end
end

assign lsb_index_fu_240_p2 = ($signed(tmp_2_i_reg_780) + $signed(32'd4294967272));

assign m_1_fu_379_p3 = ((tmp_10_i_reg_807[0:0] === 1'b1) ? tmp_13_cast_i_fu_366_p1 : tmp_16_i_fu_373_p2);

assign m_2_fu_389_p2 = (m_1_fu_379_p3 + tmp_17_i_fu_386_p1);

assign m_5_fu_395_p4 = {{m_2_fu_389_p2[63:1]}};

assign m_6_fu_405_p1 = m_5_fu_395_p4;

assign m_cast_i_fu_358_p1 = tmp_V_4_reg_772;

assign m_fu_355_p1 = tmp_V_4_reg_772;

assign man_V_1_fu_527_p2 = (54'd0 - p_Result_22_fu_523_p1);

assign man_V_2_fu_533_p3 = ((p_Result_21_reg_833[0:0] === 1'b1) ? man_V_1_fu_527_p2 : p_Result_22_fu_523_p1);

assign newSel1_fu_673_p3 = ((sel_tmp9_fu_637_p2[0:0] === 1'b1) ? tmp_48_fu_595_p3 : tmp_67_fu_568_p1);

assign newSel2_fu_724_p3 = ((or_cond_reg_878[0:0] === 1'b1) ? newSel_fu_717_p3 : newSel1_reg_883);

assign newSel_fu_717_p3 = ((sel_tmp4_reg_873[0:0] === 1'b1) ? tmp_49_fu_712_p2 : tmp_68_fu_708_p1);

assign or_cond1_fu_681_p2 = (sel_tmp9_fu_637_p2 | sel_tmp2_fu_608_p2);

assign or_cond2_fu_687_p2 = (or_cond_fu_667_p2 | or_cond1_fu_681_p2);

assign or_cond_fu_667_p2 = (sel_tmp_fu_643_p2 | sel_tmp4_fu_661_p2);

assign p_Repl2_3_trunc_i_fu_430_p2 = (tmp_23_cast_i_cast_c_fu_417_p3 + tmp_19_i_fu_425_p2);

assign p_Result_14_fu_276_p2 = (tmp_V_4_reg_772 & tmp_58_fu_270_p2);

assign p_Result_18_fu_182_p3 = i_assign_reg_127[32'd9];

assign p_Result_19_fu_206_p3 = {{19'd524287}, {p_Result_s_fu_196_p4}};

assign p_Result_20_fu_443_p5 = {{m_6_fu_405_p1[63:32]}, {tmp_21_i_fu_436_p3}, {m_6_fu_405_p1[22:0]}};

assign p_Result_22_fu_523_p1 = tmp_27_fu_516_p3;

assign p_Result_3_fu_312_p3 = tmp_V_4_reg_772[tmp_8_i_fu_307_p2];

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_190_p3) begin
    for (ap_tvar_int_0 = 13 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 12 - 0) begin
            p_Result_s_fu_196_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_196_p4[ap_tvar_int_0] = tmp_V_4_fu_190_p3[12 - ap_tvar_int_0];
        end
    end
end

assign rev_fu_301_p2 = (tmp_60_fu_293_p3 ^ 1'd1);

assign sel_tmp1_fu_603_p2 = (tmp_38_reg_843 ^ 1'd1);

assign sel_tmp21_demorgan_fu_649_p2 = (tmp_39_fu_540_p2 | sel_tmp6_demorgan_fu_614_p2);

assign sel_tmp2_fu_608_p2 = (tmp_42_fu_563_p2 & sel_tmp1_fu_603_p2);

assign sel_tmp3_fu_655_p2 = (sel_tmp21_demorgan_fu_649_p2 ^ 1'd1);

assign sel_tmp4_fu_661_p2 = (tmp_45_fu_578_p2 & sel_tmp3_fu_655_p2);

assign sel_tmp6_demorgan_fu_614_p2 = (tmp_42_fu_563_p2 | tmp_38_reg_843);

assign sel_tmp6_fu_619_p2 = (sel_tmp6_demorgan_fu_614_p2 ^ 1'd1);

assign sel_tmp7_fu_625_p2 = (tmp_39_fu_540_p2 & sel_tmp6_fu_619_p2);

assign sel_tmp8_fu_631_p2 = (tmp_43_fu_572_p2 ^ 1'd1);

assign sel_tmp9_fu_637_p2 = (sel_tmp8_fu_631_p2 & sel_tmp7_fu_625_p2);

assign sel_tmp_fu_643_p2 = (tmp_43_fu_572_p2 & sel_tmp7_fu_625_p2);

assign sh_amt_cast2_fu_693_p1 = sh_amt_reg_862;

assign sh_amt_cast_fu_696_p1 = sh_amt_reg_862;

assign sh_amt_fu_555_p3 = ((tmp_39_fu_540_p2[0:0] === 1'b1) ? tmp_40_fu_545_p2 : tmp_41_fu_550_p2);

assign table_out_V_address0 = tmp_50_fu_738_p1;

assign table_out_V_d0 = ((or_cond2_reg_888[0:0] === 1'b1) ? newSel2_fu_724_p3 : 18'd0);

assign tmp_10_i_fu_339_p2 = (($signed(lsb_index_fu_240_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_11_i_fu_345_p2 = ($signed(tmp_2_i_reg_780) + $signed(32'd4294967271));

assign tmp_13_cast_i_fu_366_p1 = tmp_13_i_fu_361_p2;

assign tmp_13_i_fu_361_p2 = m_cast_i_fu_358_p1 >> tmp_11_i_reg_812;

assign tmp_14_i_fu_350_p2 = (32'd25 - tmp_2_i_reg_780);

assign tmp_15_i_fu_370_p1 = tmp_14_i_reg_817;

assign tmp_16_i_fu_373_p2 = m_fu_355_p1 << tmp_15_i_fu_370_p1;

assign tmp_17_i_fu_386_p1 = tmp_6_i_reg_802;

assign tmp_19_i_fu_425_p2 = (8'd11 - tmp_62_reg_797);

assign tmp_20_i_fu_459_p1 = tmp_63_fu_455_p1;

assign tmp_21_i_fu_436_p3 = {{p_Result_18_reg_767}, {p_Repl2_3_trunc_i_fu_430_p2}};

assign tmp_23_cast_i_cast_c_fu_417_p3 = ((tmp_61_fu_409_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign tmp_27_fu_516_p3 = {{1'd1}, {tmp_66_reg_838}};

assign tmp_2_i_fu_222_p2 = (32'd13 - l_fu_214_p3);

assign tmp_38_fu_504_p2 = ((tmp_64_fu_474_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_39_fu_540_p2 = (($signed(F2_reg_849) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign tmp_40_fu_545_p2 = ($signed(F2_reg_849) + $signed(12'd4086));

assign tmp_41_fu_550_p2 = (12'd10 - F2_reg_849);

assign tmp_42_fu_563_p2 = ((F2_reg_849 == 12'd10) ? 1'b1 : 1'b0);

assign tmp_43_fu_572_p2 = ((sh_amt_fu_555_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_44_fu_159_p1 = i_assign_reg_127[9:0];

assign tmp_45_fu_578_p2 = ((sh_amt_fu_555_p3 < 12'd18) ? 1'b1 : 1'b0);

assign tmp_46_fu_699_p1 = $unsigned(sh_amt_cast_fu_696_p1);

assign tmp_47_fu_703_p2 = $signed(man_V_2_reg_857) >>> tmp_46_fu_699_p1;

assign tmp_48_fu_595_p3 = ((tmp_69_fu_587_p3[0:0] === 1'b1) ? 18'd262143 : 18'd0);

assign tmp_49_fu_712_p2 = tmp_67_reg_868 << sh_amt_cast2_fu_693_p1;

assign tmp_50_fu_738_p1 = i_assign_reg_127;

assign tmp_53_fu_228_p1 = tmp_2_i_fu_222_p2[12:0];

assign tmp_54_fu_245_p4 = {{lsb_index_fu_240_p2[31:1]}};

assign tmp_55_fu_232_p1 = tmp_2_i_fu_222_p2[3:0];

assign tmp_56_fu_261_p2 = (4'd6 - tmp_55_reg_792);

assign tmp_57_fu_266_p1 = tmp_56_fu_261_p2;

assign tmp_58_fu_270_p2 = 13'd8191 >> tmp_57_fu_266_p1;

assign tmp_5_i_fu_281_p2 = ((p_Result_14_fu_276_p2 != 13'd0) ? 1'b1 : 1'b0);

assign tmp_60_fu_293_p3 = lsb_index_fu_240_p2[32'd31];

assign tmp_61_fu_409_p3 = m_2_fu_389_p2[32'd25];

assign tmp_62_fu_236_p1 = l_fu_214_p3[7:0];

assign tmp_63_fu_455_p1 = p_Result_20_fu_443_p5[31:0];

assign tmp_64_fu_474_p1 = ireg_V_fu_470_p1[62:0];

assign tmp_66_fu_500_p1 = ireg_V_fu_470_p1[51:0];

assign tmp_67_fu_568_p1 = man_V_2_fu_533_p3[17:0];

assign tmp_68_fu_708_p1 = tmp_47_fu_703_p2[17:0];

assign tmp_69_fu_587_p3 = ireg_V_to_int_fu_584_p1[32'd31];

assign tmp_6_i_fu_331_p3 = {{31'd0}, {tmp_9_i_fu_325_p2}};

assign tmp_8_i_fu_307_p2 = ($signed(tmp_53_reg_787) + $signed(13'd8168));

assign tmp_9_i_fu_325_p2 = (tmp_i_52_fu_319_p2 | a_fu_287_p2);

assign tmp_V_3_fu_163_p3 = {{tmp_44_fu_159_p1}, {3'd0}};

assign tmp_V_4_fu_190_p3 = ((p_Result_18_fu_182_p3[0:0] === 1'b1) ? tmp_V_reg_757 : tmp_V_3_reg_751);

assign tmp_V_fu_171_p2 = (13'd0 - tmp_V_3_fu_163_p3);

assign tmp_fu_147_p2 = ((i_assign_reg_127 == 11'd1024) ? 1'b1 : 1'b0);

assign tmp_i_52_fu_319_p2 = (rev_fu_301_p2 & p_Result_3_fu_312_p3);

assign tmp_i_fu_177_p2 = ((tmp_V_3_reg_751 == 13'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_496_p1 = exp_tmp_V_fu_486_p4;

assign x_fu_463_p3 = ((tmp_i_reg_762[0:0] === 1'b1) ? 32'd0 : tmp_20_i_fu_459_p1);

always @ (posedge ap_clk) begin
    tmp_V_3_reg_751[2:0] <= 3'b000;
    tmp_V_reg_757[2:0] <= 3'b000;
    tmp_V_4_reg_772[2:0] <= 3'b000;
    tmp_6_i_reg_802[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //init_exp_table
